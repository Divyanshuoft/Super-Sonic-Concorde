.eqv    BASE_ADDRESS    0x10008000
.eqv    NUM_UNITS    4096

.data

tone: .byte 7      # Tone frequency
duration: .word 2000  # Tone duration (500 ms)
duration2: .word 10000  # Tone duration (500 ms)
hello_world: .asciiz "Hello world\n"  # the string to print
message_up: .asciiz "Moving up\n"
message_down: .asciiz "Moving down\n"
message_left: .asciiz "Moving left\n"
message_right: .asciiz "Moving right\n"
key_pressed: .word 0
prompt: .asciiz "Press 's' to start the program: "
input:  .space 1
frameBuffer:    .space  0x200    # 64 wide x 64 high pixels
HEALTH_GREEN:    .word   0x00FF00
BLACK:           .word   0x00000000
RED:             .word   0xFF0000
LIGHT_BLUE:      .word   0xADD8E6
DARK_BLUE:       .word   0x00008B
PURPLE:          .word   0x800080
BROWN:           .word   0xA52A2A
LIGHT_PURPLE:    .word   0x800080
LIGHT_YELLOW:    .word   0xFF0000
LIGHT_GREEN:     .word   0x00008B
YELLOW: .word 0xFFFF00
DARK_YELLOW: .word 0x9B870C
SKIN_COLOR: .word 0xFFDAB9
hx1: .word 2
hs: .word 2
hy1: .word 1
lx1: .word 62
ly1: .word 59
lx3: .word 50
ly3: .word 59
lx2: .word 56
ly2: .word 59
ex1: .word 7
ey1: .word 34
ex2: .word 59
ey2: .word 23
ex3: .word 5
ey3: .word 16
ex4: .word 61
ey4: .word 46
eax1: .word 10
eay1: .word 34
dx1: .word 17
dy1: .word 21
cx1: .word 5
cy1: .word 15
gx1: .word 55
gy1: .word 45
x: .word 5
y: .word 49
dex1: .word 50
dey1: .word 46
gravity: .word 0
position: .word 1
level: .word 1
speed: .word 0
speed_dec: .word 0
game_over:             .word

	0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x00131326, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x00262637, 0x0033333c, 0x0033333c, 0x0033333c, 0x00131326, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x0033333c, 0x00262637, 0x0033333c, 0x0033333c, 0x0033333c, 0x00131326, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x007f7f72, 0x00262637, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00000000, 0x00000000, 0x00000000, 0x00545454, 0x00545454, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x0033333c, 0x00262637, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x0033333c, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00000000, 0x007a148c, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00000000, 0x00000000, 0x00000000, 0x00545454, 0x00545454, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00000000, 0x007a148c, 0x00000000, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x007f7f72, 0x00262637, 0x007f7f72, 0x00262637, 0x00262637, 0x00595959, 0x00262637, 0x00131326, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x00000000, 0x007a148c, 0x00000000, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x007a148c, 0x00000000, 0x00000000, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x0033333c, 0x007f7f72, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x00262637, 0x00262637, 0x00262637, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x00000000, 0x00ffeb3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00ffeb3b, 0x00000000, 0x00000000, 0x00000000, 0x00545454, 0x00a1a1a1, 0x00000000, 0x00000000, 0x007a148c, 0x007a148c, 0x00000000, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x0033333c, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00595959, 0x00545454, 
	0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x00000000, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00000000, 0x007a148c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x007a148c, 0x00000000, 0x00000000, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x0033333c, 0x007f7f72, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00131326, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00000000, 0x00000000, 0x00ca3fe3, 0x007a148c, 0x007a148c, 0x00000000, 0x007a148c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x007a148c, 0x00000000, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x00131326, 0x00131326, 0x0066454e, 0x0033333c, 0x0033333c, 0x0033333c, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x00131326, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00000000, 0x00000000, 0x007a148c, 0x00ca3fe3, 0x007a148c, 0x00000000, 0x00000000, 0x007a148c, 0x007a148c, 0x007a148c, 0x007a148c, 0x007a148c, 0x007a148c, 0x007a148c, 0x007a148c, 0x007a148c, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x007a148c, 0x00ca3fe3, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00131326, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00131326, 0x00131326, 0x00131326, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x00131326, 0x0033333c, 0x0066454e, 0x0033333c, 0x0033333c, 0x0033333c, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00000000, 0x00000000, 0x007a148c, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x007a148c, 0x00ca3fe3, 0x007a148c, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x00595959, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x007f7f72, 0x00595959, 0x00131326, 0x00131326, 0x0066454e, 0x00131326, 0x00595959, 0x0066454e, 0x0033333c, 0x0033333c, 0x00595959, 0x00262637, 0x0033333c, 0x0033333c, 0x00595959, 0x0033333c, 0x00131326, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00000000, 0x00000000, 0x007a148c, 0x007a148c, 0x007a148c, 0x00ca3fe3, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x007a148c, 0x00ca3fe3, 0x007a148c, 0x007a148c, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00131326, 0x00595959, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x007f7f72, 0x007f7f72, 0x007f7f72, 0x0033333c, 0x0033333c, 0x0066454e, 0x00131326, 0x007f7f72, 0x0066454e, 0x0033333c, 0x0033333c, 0x00595959, 0x00262637, 0x0033333c, 0x0033333c, 0x00262637, 0x00262637, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00000000, 0x007a148c, 0x007a148c, 0x007a148c, 0x00ca3fe3, 0x007a148c, 0x007a148c, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x007a148c, 0x007a148c, 0x007a148c, 0x00ca3fe3, 0x007a148c, 0x007a148c, 0x007a148c, 0x007a148c, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x007f7f72, 0x0033333c, 0x00595959, 0x00492424, 0x00595959, 0x00595959, 0x00595959, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00595959, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x007a148c, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x007a148c, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00424272, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x00262637, 0x007f7f72, 0x00262637, 0x0033333c, 0x00262637, 0x007f7f72, 0x00595959, 0x007f7f72, 0x00595959, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00595959, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00000000, 0x00000000, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x007a148c, 0x007a148c, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00424272, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x00262637, 0x007f7f72, 0x00262637, 0x00595959, 0x00262637, 0x007f7f72, 0x007f7f72, 0x007f7f72, 0x00595959, 0x00262637, 0x00262637, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00131326, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 
	0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x00000000, 0x007a148c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x007a148c, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x006d6dbf, 0x0033333c, 0x0033333c, 0x00595959, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00595959, 0x00262637, 0x00262637, 0x00262637, 0x00424272, 0x00595959, 0x007f7f72, 0x00595959, 0x00595959, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x00000000, 0x00000000, 0x00545454, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00000000, 0x00000000, 0x00000000, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x006d6dbf, 0x00424272, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00595959, 0x00262637, 0x0033333c, 0x00262637, 0x00424272, 0x007f7f72, 0x007f7f72, 0x007f7f72, 0x00595959, 0x00262637, 0x0033333c, 0x0033333c, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00000000, 0x00000000, 0x00545454, 0x00545454, 0x00000000, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00131326, 0x00595959, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00595959, 0x00262637, 0x0033333c, 0x0033333c, 0x00262637, 0x007f7f72, 0x007f7f72, 0x007f7f72, 0x007f7f72, 0x00262637, 0x0033333c, 0x00131326, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00000000, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00595959, 0x006d6dbf, 0x006d6dbf, 0x006d6dbf, 0x0033333c, 0x0033333c, 0x00595959, 0x00262637, 0x0033333c, 0x0033333c, 0x00262637, 0x006d6dbf, 0x007f7f72, 0x007f7f72, 0x007f7f72, 0x00262637, 0x0033333c, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00595959, 0x00131326, 0x00545454, 0x00545454, 0x00131326, 0x00424272, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x0033333c, 0x00262637, 0x00595959, 0x00262637, 0x00262637, 0x0033333c, 0x00262637, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x006d6dbf, 0x00424272, 0x0033333c, 0x006d6dbf, 0x006d6dbf, 0x0033333c, 0x00262637, 0x00595959, 0x00262637, 0x00262637, 0x00595959, 0x00262637, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00424272, 0x00424272, 0x00545454, 0x00545454, 0x00131326, 0x0033333c, 0x00595959, 0x0033333c, 0x0033333c, 0x0033333c, 0x00595959, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00131326, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x0033333c, 0x00424272, 0x00131326, 0x007f7f72, 0x00131326, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 
	0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00545454, 0x00545454, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00595959, 0x00131326, 0x00ed1c24, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00131326, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00545454, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00545454, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x00bfbfc8, 0x00d8d8d8, 0x00fffff2, 0x00d8d8d8, 0x00ababb9, 0x00131326, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 
	0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00d8d8d8, 0x00bfbfc8, 0x00bfbfc8, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00bfbfc8, 0x00bfbfc8, 0x00131326, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00ababb9, 0x00fffff2, 0x006c6c7f, 0x006c6c7f, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x006c6c7f, 0x006c6c7f, 0x00fffff2, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00131326, 0x00fffff2, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x00fffff2, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x00131326, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00c62828, 0x00545454, 0x00c62828, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00c62828, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ababb9, 0x00fffff2, 0x006c6c7f, 0x00131326, 0x00131326, 0x006c6c7f, 0x00fffff2, 0x006c6c7f, 0x00131326, 0x00131326, 0x006c6c7f, 0x00ababb9, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00c62828, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00d8d8d8, 0x00fffff2, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00fffff2, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00bfbfc8, 0x00131326, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00c62828, 0x00c62828, 0x00c62828, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00c62828, 0x00c62828, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00545454, 0x00c62828, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00c62828, 0x00c62828, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00545454, 0x00c62828, 0x00c62828, 0x00545454, 0x00c62828, 0x00c62828, 0x00c62828, 0x00a1a1a1, 0x00131326, 0x00fffff2, 0x00fffff2, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00fffff2, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00d8d8d8, 0x00ababb9, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00c62828, 0x00545454, 0x00c62828, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00c62828, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00545454, 0x00c62828, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00545454, 0x00c62828, 0x00545454, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00545454, 0x00c62828, 0x00545454, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00131326, 0x00fffff2, 0x00d8d8d8, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00fffff2, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00d8d8d8, 0x00bfbfc8, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00ed1c24, 0x00a1a1a1, 0x00a1a1a1, 0x00c62828, 0x00c62828, 0x00c62828, 0x00545454, 0x00c62828, 0x00c62828, 0x00c62828, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00c62828, 0x00c62828, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00545454, 0x00c62828, 0x00545454, 0x00545454, 0x00c62828, 0x00c62828, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00c62828, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00545454, 0x00c62828, 0x00c62828, 0x00545454, 0x00c62828, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00ababb9, 0x00fffff2, 0x00d8d8d8, 0x00bfbfc8, 0x00131326, 0x00131326, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00131326, 0x00131326, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00131326, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 
	0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00c62828, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00c62828, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00c62828, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00ababb9, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00131326, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00545454, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00c62828, 0x00a1a1a1, 0x00545454, 0x00131326, 0x00131326, 0x00545454, 0x00ababb9, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00fffff2, 0x00fffff2, 0x00131326, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00131326, 0x00131326, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x00cc864f, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00ababb9, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00fffff2, 0x00fffff2, 0x00131326, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00996441, 0x00131326, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00d8d8d8, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00fffff2, 0x00fffff2, 0x00ababb9, 0x00bfbfc8, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00996441, 0x00996441, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00bfbfc8, 0x00d8d8d8, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00fffff2, 0x00fffff2, 0x00bfbfc8, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00996441, 0x00131326, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00bfbfc8, 0x00bfbfc8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00fffff2, 0x00fffff2, 0x00bfbfc8, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00131326, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00131326, 0x00545454, 0x00545454, 0x0099bf3b, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x00a1a1a1, 0x004c3229, 0x004c3229, 0x00cc6728, 0x00ffa332, 0x00994c30, 0x00994c30, 0x00131326, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x009595db, 0x00bfbfc8, 0x00ababb9, 0x00bfbfc8, 0x00d8d8d8, 0x00d8d8d8, 0x00bfbfc8, 0x00ababb9, 0x00fffff2, 0x00fffff2, 0x00bfbfc8, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x009595db, 0x00bfbfc8, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x0099bf3b, 0x00545454, 0x00131326, 0x0099bf3b, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00131326, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x00cc6728, 0x0055302e, 0x0055302e, 0x00131326, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00bfbfc8, 0x00ababb9, 0x00fffff2, 0x00fffff2, 0x00bfbfc8, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00ababb9, 0x00fffff2, 0x00bfbfc8, 0x00bfbfc8, 0x00bfbfc8, 0x00bfbfc8, 0x00545454, 0x00545454, 0x00545454, 
	0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x0099bf3b, 0x00a1a1a1, 0x00131326, 0x0099bf3b, 0x00545454, 0x0099bf3b, 0x00799935, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00cc6728, 0x00cc6728, 0x0055302e, 0x0055302e, 0x0055302e, 0x0055302e, 0x00131326, 0x00d8d8d8, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00bfbfc8, 0x00ababb9, 0x00fffff2, 0x00fffff2, 0x00bfbfc8, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00ababb9, 0x00fffff2, 0x00d8d8d8, 0x00bfbfc8, 0x00bfbfc8, 0x00bfbfc8, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x00799935, 0x00a1a1a1, 0x00536a30, 0x00799935, 0x00545454, 0x00131326, 0x0099bf3b, 0x00a1a1a1, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00cc6728, 0x00ff8423, 0x00cc6728, 0x00371f35, 0x00371f35, 0x007a393a, 0x007a393a, 0x00cc6728, 0x00cc6728, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x00bfbfc8, 0x00bfbfc8, 0x00bfbfc8, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x0099bf3b, 0x00536a30, 0x0099bf3b, 0x0099bf3b, 0x00131326, 0x00799935, 0x00545454, 0x00131326, 0x00131326, 0x00ffa332, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00131326, 0x00ffa332, 0x00cc6728, 0x0055302e, 0x00cc6728, 0x00cc6728, 0x0055302e, 0x0055302e, 0x007a393a, 0x00ff8423, 0x00cc6728, 0x00d8d8d8, 0x00bfbfc8, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00bfbfc8, 0x00fffff2, 0x00d8d8d8, 0x00fffff2, 0x00fffff2, 0x00d8d8d8, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x00bfbfc8, 0x00bfbfc8, 0x00bfbfc8, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00799935, 0x0099bf3b, 0x00a1a1a1, 0x00545454, 0x00799935, 0x00799935, 0x0099bf3b, 0x0099bf3b, 0x00536a30, 0x0099bf3b, 0x00536a30, 0x0099bf3b, 0x00131326, 0x00ff8423, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00545454, 0x00545454, 0x00a1a1a1, 0x0055302e, 0x00cc6728, 0x0055302e, 0x00a8a88c, 0x00cc6728, 0x00cc6728, 0x0055302e, 0x0055302e, 0x0055302e, 0x00cc6728, 0x00ff8423, 0x00d8d8d8, 0x00bfbfc8, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00bfbfc8, 0x00fffff2, 0x00d8d8d8, 0x00d8d8d8, 0x00fffff2, 0x00d8d8d8, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x00bfbfc8, 0x00d8d8d8, 0x00d8d8d8, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00799935, 0x0099bf3b, 0x00a1a1a1, 0x00545454, 0x0099bf3b, 0x00799935, 0x00799935, 0x00799935, 0x00799935, 0x00799935, 0x00799935, 0x00799935, 0x00cc6728, 0x00ff8423, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00131326, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00545454, 0x00545454, 0x0055302e, 0x0055302e, 0x007a393a, 0x0055302e, 0x007a393a, 0x0055302e, 0x0055302e, 0x0055302e, 0x007a393a, 0x0055302e, 0x00371f35, 0x0055302e, 0x00131326, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x006c6c7f, 0x00bfbfc8, 0x00bfbfc8, 0x00d8d8d8, 0x00d8d8d8, 0x00fffff2, 0x00d8d8d8, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x00bfbfc8, 0x00d8d8d8, 0x00d8d8d8, 0x00131326, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00131326, 0x00799935, 0x0099bf3b, 0x00536a30, 0x00799935, 0x0099bf3b, 0x00536a30, 0x00536a30, 0x00536a30, 0x00799935, 0x00799935, 0x00131326, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00545454, 0x00545454, 0x0055302e, 0x0055302e, 0x00cc6728, 0x0055302e, 0x00cc6728, 0x006b6b4e, 0x00cc6728, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x0055302e, 0x0055302e, 0x00131326, 0x00ababb9, 0x00d8d8d8, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x008e8ea0, 0x008e8ea0, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00131326, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x00799935, 0x0099bf3b, 0x0099bf3b, 0x0099bf3b, 0x00799935, 0x00536a30, 0x00799935, 0x0099bf3b, 0x00131326, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00545454, 0x00545454, 0x0055302e, 0x0055302e, 0x00cc6728, 0x00371f35, 0x00cc6728, 0x00371f35, 0x007a393a, 0x007a393a, 0x00cc6728, 0x00cc6728, 0x0055302e, 0x0055302e, 0x0055302e, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x008e8ea0, 0x008e8ea0, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00131326, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x00799935, 0x0099bf3b, 0x0099bf3b, 0x00799935, 0x00799935, 0x0099bf3b, 0x00799935, 0x00131326, 0x00131326, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00131326, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00cc6728, 0x0055302e, 0x00ff8423, 0x00371f35, 0x00ff8423, 0x00371f35, 0x0055302e, 0x0055302e, 0x0055302e, 0x00cc6728, 0x00cc6728, 0x0055302e, 0x0055302e, 0x00ababb9, 0x00ababb9, 0x008e8ea0, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x008e8ea0, 0x006c6c7f, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00a1a1a1, 0x00a1a1a1, 
	0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x00799935, 0x00799935, 0x00799935, 0x00799935, 0x0099bf3b, 0x00799935, 0x00545454, 0x00a1a1a1, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00131326, 0x00131326, 0x00ff8423, 0x00994c30, 0x00cc6728, 0x00994c30, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00371f35, 0x0055302e, 0x0055302e, 0x0055302e, 0x00cc6728, 0x00cc6728, 0x0055302e, 0x00ababb9, 0x008e8ea0, 0x008e8ea0, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x008e8ea0, 0x006c6c7f, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00bfbfc8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00ababb9, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00799935, 0x00799935, 0x00536a30, 0x00536a30, 0x00799935, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00994c30, 0x00131326, 0x00994c30, 0x00131326, 0x00cc6728, 0x00994c30, 0x00ff8423, 0x00e575af, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00ff8423, 0x007a393a, 0x00cc6728, 0x0055302e, 0x00371f35, 0x00371f35, 0x0055302e, 0x00cc6728, 0x00cc6728, 0x0055302e, 0x008e8ea0, 0x008e8ea0, 0x008e8ea0, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x008e8ea0, 0x006c6c7f, 0x00bfbfc8, 0x00d8d8d8, 0x00ababb9, 0x00bfbfc8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00bfbfc8, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00536a30, 0x00536a30, 0x00536a30, 0x00536a30, 0x00364736, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00e575af, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00131326, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x008757aa, 0x00ff8423, 0x007a393a, 0x00cc6728, 0x00371f35, 0x0055302e, 0x00cc6728, 0x0055302e, 0x0055302e, 0x00a8a88c, 0x007a393a, 0x00ff8423, 0x00131326, 0x008e8ea0, 0x008e8ea0, 0x008e8ea0, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x008e8ea0, 0x006c6c7f, 0x006c6c7f, 0x00d8d8d8, 0x00ababb9, 0x00ababb9, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x009595db, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x00799935, 0x00536a30, 0x00364736, 0x00536a30, 0x00536a30, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00131326, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00e575af, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x0055302e, 0x00cc6728, 0x00b88cff, 0x00cc6728, 0x007a393a, 0x00371f35, 0x008757aa, 0x0055302e, 0x007a393a, 0x00ffa332, 0x00cc6728, 0x00d8d8d8, 0x008e8ea0, 0x008e8ea0, 0x008e8ea0, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x008e8ea0, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x00d8d8d8, 0x00ababb9, 0x00bfbfc8, 0x00d8d8d8, 0x00d8d8d8, 0x00d8d8d8, 0x00131326, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00364736, 0x00799935, 0x00799935, 0x00364736, 0x00799935, 0x00536a30, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00b88cff, 0x0055302e, 0x00371f35, 0x0055302e, 0x0055302e, 0x0055302e, 0x0055302e, 0x0055302e, 0x0055302e, 0x00ff8423, 0x007a393a, 0x00bfbfc8, 0x008e8ea0, 0x008e8ea0, 0x008e8ea0, 0x00131326, 0x006c6c7f, 0x008e8ea0, 0x008e8ea0, 0x008e8ea0, 0x006c6c7f, 0x006c6c7f, 0x006c6c7f, 0x00ababb9, 0x00bfbfc8, 0x00bfbfc8, 0x00bfbfc8, 0x00131326, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00131326, 0x00996032, 0x00996032, 0x00364736, 0x00799935, 0x00799935, 0x00364736, 0x00799935, 0x00364736, 0x00996032, 0x00664028, 0x00545454, 0x00545454, 0x00545454, 0x00131326, 0x00cc6761, 0x00cc6728, 0x00e575af, 0x00e575af, 0x00e575af, 0x00e575af, 0x00e575af, 0x00e575af, 0x00cc6728, 0x00cc6761, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x008757aa, 0x0055302e, 0x00371f35, 0x008757aa, 0x008757aa, 0x0055302e, 0x0055302e, 0x007a393a, 0x00131326, 0x00bfbfc8, 0x006c6c7f, 0x008e8ea0, 0x00a3a3ff, 0x00131326, 0x00a1a1a1, 0x00131326, 0x00a3a3ff, 0x00131326, 0x008e8ea0, 0x008e8ea0, 0x006c6c7f, 0x006c6c7f, 0x00131326, 0x009595db, 0x00131326, 0x00131326, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00664028, 0x00664028, 0x00664028, 0x00996032, 0x003f2823, 0x00364736, 0x00364736, 0x00364736, 0x003f2823, 0x00996032, 0x003f2823, 0x00664028, 0x00996032, 0x00664028, 0x00131326, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x0072392e, 0x0072392e, 0x0072392e, 0x00131326, 0x00131326, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00cccccc, 0x008757aa, 0x0055302e, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x00131326, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00131326, 0x00131326, 0x00131326, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00996032, 0x00996032, 0x00455f13, 0x00996032, 0x00455f13, 0x00996032, 0x00664028, 0x00996032, 0x003f2823, 0x00996032, 0x00996032, 0x005f6f18, 0x00996032, 0x00664028, 0x003f2823, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00fffff2, 0x00131326, 0x00b88cff, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00545454, 0x00545454, 0x00545454, 0x00545454, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 0x00a1a1a1, 
bgwithplane: .word

	0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00353535, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00353535, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 
	0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00404040, 0x00404040, 0x00404040, 0x00ffeb3b, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00575757, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00ed1c24, 0x00404040, 0x00404040, 0x00ffc42e, 0x00ffeb3b, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00353535, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00313131, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00313131, 0x00353535, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00404040, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00313131, 0x00404040, 0x00404040, 0x00ed1c24, 0x00575757, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00575757, 0x00ed1c24, 0x00353535, 0x00404040, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00575757, 0x00313131, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00ed1c24, 0x00353535, 0x00ed1c24, 0x00575757, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00ed1c24, 0x00313131, 0x00575757, 0x00313131, 0x00404040, 0x00ed1c24, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00ed1c24, 0x00575757, 0x00ed1c24, 0x00313131, 0x00353535, 0x00353535, 0x00313131, 0x00575757, 0x00ed1c24, 0x00313131, 0x00ff8c00, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00ff8c00, 0x00575757, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00ed1c24, 0x00313131, 0x00ed1c24, 0x00404040, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00313131, 0x00404040, 0x00313131, 0x00404040, 0x00ed1c24, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00313131, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00ed1c24, 0x00313131, 0x00ff8c00, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00ff8c00, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00404040, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00313131, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00404040, 0x00313131, 0x00ed1c24, 0x00575757, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00404040, 0x00404040, 0x00ed1c24, 0x00353535, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00ed1c24, 0x00313131, 0x00404040, 0x00313131, 0x00353535, 0x00ed1c24, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00313131, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00404040, 0x00404040, 0x00ed1c24, 0x00ff8c00, 0x00ff8c00, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ff8c00, 0x00ff8c00, 0x00404040, 0x00404040, 
	0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00ed1c24, 0x00353535, 0x00ed1c24, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00404040, 0x00313131, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00404040, 0x00404040, 0x00313131, 0x00353535, 0x00404040, 0x00ed1c24, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00575757, 0x00ed1c24, 0x00575757, 0x00404040, 0x00404040, 0x00313131, 0x00ed1c24, 0x00353535, 0x00353535, 0x00ed1c24, 0x00353535, 0x00ed1c24, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00ff6200, 0x00ff6a00, 0x00ff8c00, 0x00ff8c00, 0x00ffc107, 0x00ff8c00, 0x00ff8c00, 0x00ff6a00, 0x00ff6200, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00ed1c24, 0x00313131, 0x00ed1c24, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00353535, 0x00313131, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00353535, 0x00ed1c24, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00575757, 0x00ed1c24, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00ed1c24, 0x00313131, 0x00313131, 0x00ed1c24, 0x00313131, 0x00ed1c24, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00ff9800, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00ed1c24, 0x00404040, 0x00404040, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00575757, 0x00404040, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00313131, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00353535, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00353535, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00404040, 0x00ed1c24, 0x00ff0000, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff0000, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00ed1c24, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00ed1c24, 0x00ff0000, 0x00ff0000, 0x00ff2b00, 0x00ff2b00, 0x00ff2b00, 0x00ff0000, 0x00ff0000, 0x00313131, 0x00313131, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00313131, 0x00404040, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 
	0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00131326, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00353535, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00575757, 0x00575757, 0x00cc864f, 0x00cc864f, 0x00131326, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00996441, 0x00996441, 0x004c3229, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00131326, 0x00996441, 0x004c3229, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x004c3229, 0x00996441, 0x00131326, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 
	0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00353535, 0x00996441, 0x00996441, 0x00131326, 0x00404040, 0x00353535, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00131326, 0x004c3229, 0x004c3229, 0x00131326, 0x00994c30, 0x00ffa332, 0x00cc6728, 0x00131326, 0x00131326, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00353535, 0x00404040, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00000000, 0x00f0be78, 0x00ffefbf, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffefbf, 0x00f0be78, 0x00000000, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00131326, 0x00131326, 0x00404040, 0x00131326, 0x004c3229, 0x004c3229, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00ffa332, 0x00994c30, 0x00994c30, 0x00994c30, 0x00131326, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00404040, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00131326, 0x00131326, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00575757, 0x00575757, 0x00353535, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00131326, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00404040, 0x00575757, 0x00575757, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00000000, 0x00ffefbf, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffefbf, 0x00000000, 0x00313131, 0x00353535, 0x00404040, 0x00131326, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ffa332, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00000000, 0x00ffefbf, 0x00ffffff, 0x00ffefbf, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffefbf, 0x00ffffff, 0x00ffefbf, 0x00000000, 0x00313131, 0x00313131, 0x00131326, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00575757, 0x00404040, 0x00404040, 0x00000000, 0x00ffefbf, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffefbf, 0x00ffefbf, 0x00000000, 0x00575757, 0x00313131, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00131326, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 
	0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00000000, 0x00ffefbf, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffefbf, 0x00000000, 0x00000000, 0x00404040, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00994c30, 0x00131326, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00ffffff, 0x00ffefbf, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffefbf, 0x00ffffff, 0x00000000, 0x00404040, 0x00404040, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00131326, 0x00ffa332, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00131326, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00f0be78, 0x00ffefbf, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffefbf, 0x00f0be78, 0x00404040, 0x00404040, 0x00131326, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00131326, 0x00131326, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00000000, 0x00404040, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00353535, 0x00000000, 0x00000000, 0x00cc6728, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00ff9800, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00f0be78, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00313131, 0x00f0be78, 0x00000000, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00313131, 0x00353535, 0x00404040, 0x00ff9800, 0x00ff9800, 0x00404040, 0x00ff9800, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00ffefbf, 0x00000000, 0x00000000, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00000000, 0x00ffefbf, 0x00000000, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00313131, 0x00ff9800, 0x00313131, 0x00313131, 0x00404040, 0x00ff9800, 0x00ffc107, 0x00ff9800, 0x00ffc107, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00f0be78, 0x00ffffff, 0x00ffffff, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00ffffff, 0x00ffffff, 0x00f0be78, 0x00000000, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00131326, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00994c30, 0x00131326, 0x00994c30, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00ff9800, 0x00575757, 0x00ff9800, 0x00404040, 0x00ff9800, 0x00000000, 0x00000000, 0x00000000, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00131326, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00131326, 0x00131326, 0x00131326, 0x00cc6728, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00ff9800, 0x00404040, 0x00ff9800, 0x00ffc107, 0x00000000, 0x00e01d1d, 0x00c70000, 0x00000000, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 
	0x00575757, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00575757, 0x00131326, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00994c30, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00ffc107, 0x00ff9800, 0x00ffc107, 0x00000000, 0x00e01d1d, 0x00c70000, 0x00e01d1d, 0x00000000, 0x00404040, 0x00404040, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00000000, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00000000, 0x00575757, 0x00131326, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00131326, 0x00994c30, 0x00994c30, 0x00131326, 0x00ff8423, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00ff8423, 0x00994c30, 0x00994c30, 0x00994c30, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00ff9800, 0x00404040, 0x00ff9800, 0x00ffc107, 0x00000000, 0x00e01d1d, 0x00c70000, 0x00e01d1d, 0x00000000, 0x00ff9800, 0x00353535, 0x00404040, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00000000, 0x00000000, 0x00575757, 0x00313131, 0x00404040, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00575757, 0x00404040, 0x00cc6761, 0x00000000, 0x00000000, 0x00000000, 0x00994c30, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00ff8423, 0x00131326, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00131326, 0x00131326, 0x00131326, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00ff9800, 0x00ff9800, 0x00ffc107, 0x00000000, 0x00e01d1d, 0x00c70000, 0x00e01d1d, 0x00000000, 0x00ffc107, 0x00ff9800, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00313131, 0x00404040, 0x00000000, 0x00f0be78, 0x00000000, 0x00000000, 0x00000000, 0x00353535, 0x00000000, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00000000, 0x00404040, 0x00000000, 0x00000000, 0x00000000, 0x00f0be78, 0x00000000, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00994c30, 0x00994c30, 0x00131326, 0x00994c30, 0x00994c30, 0x00131326, 0x00131326, 0x00cc6728, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00e575af, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00ff9800, 0x00ffc107, 0x00ffc107, 0x00000000, 0x00e83333, 0x00c70000, 0x00e01d1d, 0x00000000, 0x00ffc107, 0x00ff9800, 0x00ff9800, 0x00575757, 0x00313131, 0x00313131, 0x00404040, 0x00313131, 0x00404040, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00f0be78, 0x00000000, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00f0be78, 0x00000000, 0x00f0be78, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00000000, 0x00f0be78, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00131326, 0x00313131, 0x00313131, 0x00000000, 0x00000000, 0x00404040, 0x00ff9800, 0x00ffc107, 0x00000000, 0x00e83333, 0x00c70000, 0x00e01d1d, 0x00000000, 0x00ff9800, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00404040, 0x00313131, 0x00353535, 0x00000000, 0x00f0be78, 0x00ffefbf, 0x00000000, 0x00000000, 0x00000000, 0x00f0be78, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00f0be78, 0x00000000, 0x00000000, 0x00000000, 0x00ffefbf, 0x00f0be78, 0x00000000, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00575757, 0x00575757, 0x00575757, 0x00000000, 0x00333333, 0x00000000, 0x00ff9800, 0x00000000, 0x00e83333, 0x00c70000, 0x00e01d1d, 0x00000000, 0x00ff9800, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00404040, 0x00575757, 0x00313131, 0x00353535, 0x00000000, 0x00000000, 0x00000000, 0x00353535, 0x00000000, 0x00ffefbf, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00404040, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffefbf, 0x00000000, 0x00313131, 0x00000000, 0x00000000, 0x00000000, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00994c30, 0x00131326, 0x00131326, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00131326, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00000000, 0x00333333, 0x00000000, 0x00e83333, 0x00c70000, 0x00e01d1d, 0x00000000, 0x00ff9800, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00313131, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00404040, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00e575af, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00131326, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00000000, 0x00333333, 0x00000000, 0x00c70000, 0x00e01d1d, 0x00000000, 0x00ffc107, 0x00ff9800, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 
	0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00f0be78, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00000000, 0x00404040, 0x00000000, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00f0be78, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00cc6728, 0x00cc6761, 0x00cc6761, 0x00cc6728, 0x00cc6761, 0x00cc6761, 0x00cc6728, 0x00cc6761, 0x00cc6761, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00e575af, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00333333, 0x00000000, 0x00000000, 0x00ffc107, 0x00ff9800, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00575757, 0x00575757, 0x00575757, 0x00000000, 0x00ffefbf, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00404040, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffefbf, 0x00000000, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00131326, 0x00cc6761, 0x00cc6728, 0x00cc6728, 0x00e575af, 0x00e575af, 0x00e575af, 0x00e575af, 0x00e575af, 0x00e575af, 0x00e575af, 0x00e575af, 0x00e575af, 0x00e575af, 0x00cc6728, 0x00e575af, 0x00131326, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00333333, 0x00000000, 0x00333333, 0x00333333, 0x00000000, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00575757, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00000000, 0x00353535, 0x00000000, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00ffefbf, 0x00000000, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00131326, 0x00131326, 0x00994c30, 0x0072392e, 0x0072392e, 0x0072392e, 0x0072392e, 0x0072392e, 0x00994c30, 0x00994c30, 0x00994c30, 0x00131326, 0x00131326, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00000000, 0x00333333, 0x00000000, 0x00313131, 0x00000000, 0x00000000, 0x00333333, 0x00000000, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00404040, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00313131, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00313131, 0x00313131, 0x00353535, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00000000, 0x00000000, 0x00333333, 0x00000000, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00000000, 0x00000000, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00575757, 0x00575757, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00404040, 0x00404040, 0x00353535, 0x00353535, 0x00313131, 0x00000000, 0x00333333, 0x00000000, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00353535, 0x00353535, 0x00313131, 0x00313131, 0x00313131, 0x00000000, 0x00000000, 0x00000000, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00575757, 0x00575757, 0x00313131, 0x00313131, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00353535, 0x00313131, 0x00575757, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00313131, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 0x00404040, 

background: .word


	0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00ed1c24, 0x00b6e3e3, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 
	0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00ed1c24, 0x00ed1c24, 0x00ffffff, 0x00ffffff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ed1c24, 0x00ed1c24, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00bfeeff, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00bfeeff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ed1c24, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00bfeeff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00e3f8ff, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00bfeeff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00b6e3e3, 
	0x00b6e3e3, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00b6e3e3, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00b6e3e3, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00bfeeff, 0x00e3f8ff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x00bfeeff, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00bfeeff, 0x00e3f8ff, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bfeeff, 0x00bfeeff, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00bfeeff, 0x00ffffff, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00bfeeff, 0x00bfeeff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00e3f8ff, 0x00bfeeff, 0x00bfeeff, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x00ffffff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00e3f8ff, 0x00e3f8ff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00e3f8ff, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00e3f8ff, 0x00e3f8ff, 0x00bfeeff, 0x00bfeeff, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00bfeeff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00969696, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x00828282, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 
	0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00b6e3e3, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00e3f8ff, 0x00e3f8ff, 0x00e3f8ff, 0x001c504b, 0x001d4f4b, 0x001d4f4b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x00bfeeff, 0x001c504b, 0x001d4f4b, 0x0043b5ab, 0x001d4f4b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00969696, 0x00727272, 0x00727272, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x00bfeeff, 0x001c504b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x001d4f4b, 0x001d4f4b, 0x009b9b9b, 0x001d5049, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bfeeff, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x001d4f4b, 0x00bfeeff, 0x001d4f4b, 0x0043b5ab, 0x001c4f4b, 0x001d5049, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x00b6e3e3, 0x00bfeeff, 0x001d4f4b, 0x003e9c94, 0x00338780, 0x001c4f4b, 0x001d5049, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00422f12, 0x00338780, 0x00338780, 0x00422f12, 0x00422f12, 0x00b6e3e3, 0x00b6e3e3, 0x001d4f4b, 0x00338780, 0x00338780, 0x001c4f4b, 0x001d5049, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x007d6027, 0x005e4520, 0x007d6027, 0x00338780, 0x005e4520, 0x007d6027, 0x007d6027, 0x00b6e3e3, 0x00b6e3e3, 0x001d4f4b, 0x00338780, 0x00338780, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x005e4520, 0x001d4f4b, 0x00338780, 0x005e4520, 0x00b6e3e3, 0x00b6e3e3, 
	0x00b6e3e3, 0x00b6e3e3, 0x005e4520, 0x00338780, 0x001d4f4b, 0x005e4520, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00bcdbe0, 0x00bcdbe0, 0x00bcdbe0, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00338780, 0x00338780, 0x001d4f4b, 0x00b6e3e3, 0x00b6e3e3, 0x007d6027, 0x007d6027, 0x005e4520, 0x00338780, 0x007d6027, 0x005e4520, 0x007d6027, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00058205, 0x00058205, 0x0028ab28, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00171717, 0x00000000, 0x00bcdbe0, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x002eb34f, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x001d5049, 0x001c4f4b, 0x00338780, 0x00338780, 0x001d4f4b, 0x00b6e3e3, 0x00b6e3e3, 0x00422f12, 0x00422f12, 0x00338780, 0x00338780, 0x00422f12, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00000000, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x00171717, 0x00171717, 0x00171717, 0x00bcdbe0, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x000b4019, 0x000b4019, 0x00156e2e, 0x002eb34f, 0x00b6e3e3, 0x00b6e3e3, 0x001d5049, 0x001c4f4b, 0x00338780, 0x003e9c94, 0x001d4f4b, 0x00b6e3e3, 0x00b6e3e3, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x0028ab28, 0x0028ab28, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x0028ab28, 0x0028ab28, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00184a19, 0x00000000, 0x004caf50, 0x004caf50, 0x00184a19, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00156e2e, 0x00156e2e, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x001d5049, 0x001c4f4b, 0x0043b5ab, 0x001d4f4b, 0x00b6e3e3, 0x001d4f4b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x0028ab28, 0x0028ab28, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x002eb34f, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x001d5049, 0x00b6e3e3, 0x001d4f4b, 0x001d4f4b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x001c504b, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x00058205, 0x00058205, 0x00055905, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00184a19, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x004caf50, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x000b4019, 0x002eb34f, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x000b4019, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x001d4f4b, 0x0043b5ab, 0x001d4f4b, 0x001c504b, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00055905, 0x00055905, 0x00055905, 0x00055905, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x0028ab28, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00184a19, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x000b4019, 0x000b4019, 0x002eb34f, 0x00156e2e, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x001d4f4b, 0x001d4f4b, 0x001c504b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 
	0x00afafaf, 0x009b9b9b, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00828282, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x00b6e3e3, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00828282, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x004caf50, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x004caf50, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x00000000, 0x00000000, 0x00b6e3e3, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x00727272, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00969696, 0x00727272, 0x00727272, 0x00727272, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x00184a19, 0x00184a19, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00969696, 0x00727272, 0x00727272, 0x00727272, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00184a19, 0x004caf50, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x00b6e3e3, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x00055905, 0x00055905, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x004caf50, 0x00184a19, 0x004caf50, 0x004caf50, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x002eb34f, 0x002eb34f, 0x00156e2e, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x003d1d04, 0x00592a05, 0x00592a05, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00184a19, 0x00000000, 0x004caf50, 0x004caf50, 0x004caf50, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x000b4019, 0x002eb34f, 0x002eb34f, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x002eb34f, 0x00156e2e, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x00156e2e, 0x000b4019, 0x00b6e3e3, 
	0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00b6e3e3, 0x00b6e3e3, 0x003d1d04, 0x003d1d04, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00184a19, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00ffffff, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x002eb34f, 0x002eb34f, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x00ffffff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00b6e3e3, 0x003d1d04, 0x00592a05, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00000000, 0x00523a0f, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00523a0f, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x00ffffff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x003d1d04, 0x00592a05, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00523a0f, 0x00000000, 0x00000000, 0x00523a0f, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00ffffff, 0x00ffffff, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x00ffffff, 0x00ffffff, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x003d1d04, 0x00592a05, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00735c30, 0x00523a0f, 0x00523a0f, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x0021140e, 0x0021140e, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00b6e3e3, 0x003d1d04, 0x003d1d04, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00523a0f, 0x00523a0f, 0x00735c30, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x0021140e, 0x00382117, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00b6e3e3, 0x003d1d04, 0x00592a05, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00523a0f, 0x00523a0f, 0x00735c30, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x0021140e, 0x00382117, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00b6e3e3, 0x00b6e3e3, 0x003d1d04, 0x00592a05, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00523a0f, 0x00523a0f, 0x00735c30, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x0021140e, 0x00382117, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x00b6e3e3, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x00592a05, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00523a0f, 0x00523a0f, 0x00000000, 0x00523a0f, 0x00523a0f, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x0021140e, 0x0021140e, 0x00382117, 0x0045281d, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 
	0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00aee6e8, 0x00aee6e8, 0x00aee6e8, 0x003d1d04, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x00592a05, 0x00592a05, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x0021140e, 0x0021140e, 0x0021140e, 0x0045281d, 0x0045281d, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x00b6e3e3, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 
	
startend: .word

	0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00f0d6af, 0x00f0d6af, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x008e8e8e, 0x00808080, 0x00808080, 0x00808080, 0x00737373, 0x00ffeb3b, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x008e8e8e, 0x008e8e8e, 0x00808080, 0x00808080, 0x008e8e8e, 0x00808080, 0x00808080, 0x00808080, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00f0d6af, 0x008e8e8e, 0x00808080, 0x00808080, 0x00808080, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00ffeb3b, 0x008e8e8e, 0x008e8e8e, 0x008e8e8e, 0x00808080, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ffc42e, 0x00ffeb3b, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00bd9560, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ffc42e, 0x00ffeb3b, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00f0d6af, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00bd9560, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ff8c00, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00ff8c00, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ff8c00, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00ff8c00, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ff8c00, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00ff8c00, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00e6c793, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ff8c00, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00ff8c00, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00808080, 0x00808080, 0x00ff8c00, 0x00ff8c00, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ff8c00, 0x00ff8c00, 0x00737373, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x007f7f7f, 0x007f7f7f, 0x00ff8c00, 0x00ff8c00, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ff8c00, 0x00ff8c00, 0x00808080, 0x00808080, 
	0x00c9c9c9, 0x00ff6200, 0x00ff6a00, 0x00ff8c00, 0x00ff8c00, 0x00ffc107, 0x00ff8c00, 0x00ff8c00, 0x00ff6a00, 0x00ff6200, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00caaa7f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00caaa7f, 0x00000000, 0x00000000, 0x00000000, 0x00caaa7f, 0x00000000, 0x00000000, 0x00000000, 0x00caaa7f, 0x00000000, 0x00000000, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00ff6200, 0x00ff6a00, 0x00ff8c00, 0x00ff8c00, 0x00ffc107, 0x00ff8c00, 0x00ff8c00, 0x00ff6a00, 0x00ff6200, 0x00c9c9c9, 0x00c9c9c9, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00ff9800, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00ed1c24, 0x00e6c793, 0x00e6c793, 0x00ed1c24, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00ff9800, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ff0000, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff0000, 0x00c9c9c9, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00ff0000, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff0000, 0x00cfcfcf, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ff0000, 0x00ff0000, 0x00ff2b00, 0x00ff2b00, 0x00ff2b00, 0x00ff0000, 0x00ff0000, 0x00c9c9c9, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00ed1c24, 0x00e6c793, 0x00e6c793, 0x00ed1c24, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00ff0000, 0x00ff0000, 0x00ff2b00, 0x00ff2b00, 0x00ff2b00, 0x00ff0000, 0x00ff0000, 0x00cfcfcf, 0x00cfcfcf, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00c9c9c9, 0x007f7f7f, 0x00c9c9c9, 0x00f0d6af, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00000000, 0x00000000, 0x00000000, 0x00caaa7f, 0x00000000, 0x00000000, 0x00000000, 0x00caaa7f, 0x00000000, 0x00000000, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00ed1c24, 0x00caaa7f, 0x00caaa7f, 0x00ed1c24, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00cfcfcf, 0x00c1c1c1, 0x00c1c1c1, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00bd9560, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00cfcfcf, 0x00cfcfcf, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x00808080, 0x008e8e8e, 0x00737373, 0x00737373, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 
	0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00bdbdbd, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00f0d6af, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x008e8e8e, 0x00808080, 0x00808080, 0x00808080, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00000000, 0x00000000, 0x00f0d6af, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x008e8e8e, 0x008e8e8e, 0x00808080, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x0034495e, 0x0034495e, 0x0034495e, 0x0034495e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00c9c9c9, 0x00c9c9c9, 0x00f57c00, 0x00ffe57f, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x0034495e, 0x0022628c, 0x0022628c, 0x003498db, 0x0034495e, 0x00c9c9c9, 0x00c9c9c9, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00ffab00, 0x00ffab00, 0x00ffe57f, 0x0098772c, 0x00bdbdbd, 0x00bdbdbd, 0x00f57c00, 0x00ffe57f, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x0034495e, 0x003498db, 0x003498db, 0x0022628c, 0x003498db, 0x0034495e, 0x00c9c9c9, 0x00c9c9c9, 0x00e6c793, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f57c00, 0x00e6c793, 0x00f57c00, 0x00ffab00, 0x00bf360c, 0x00bf360c, 0x00ffab00, 0x00ffab00, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x0034495e, 0x0034495e, 0x003498db, 0x0022628c, 0x003498db, 0x0034495e, 0x0034495e, 0x00bdbdbd, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00c9c9c9, 0x00bf360c, 0x00f57c00, 0x00bf360c, 0x00bf360c, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00bdbdbd, 0x00737373, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00808080, 0x00808080, 0x00808080, 0x008d8d8d, 0x008d8d8d, 0x007f7f7f, 0x0034495e, 0x003498db, 0x0022628c, 0x003498db, 0x003498db, 0x0034495e, 0x00737373, 0x008e8e8e, 0x00808080, 0x00808080, 0x00808080, 0x00808080, 0x00808080, 0x008d8d8d, 0x008d8d8d, 0x007f7f7f, 0x007f7f7f, 0x007f7f7f, 0x00808080, 0x00737373, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x007f7f7f, 0x007f7f7f, 0x007f7f7f, 0x00808080, 0x00737373, 0x00737373, 0x00737373, 0x0098772c, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00808080, 0x00bf360c, 0x00f57c00, 0x00ffab00, 0x00ffab00, 0x00f57c00, 0x00808080, 0x00737373, 0x00f57c00, 0x00ffe57f, 0x00737373, 0x008e8e8e, 0x00808080, 0x00808080, 
	0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x0034495e, 0x003498db, 0x0022628c, 0x0022628c, 0x003498db, 0x0034495e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x0098772c, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00c9c9c9, 0x00c9c9c9, 0x00242424, 0x00ffab00, 0x00ffab00, 0x00bf360c, 0x00c45602, 0x00f57c00, 0x00f57c00, 0x00ffab00, 0x00ffe57f, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c1c1c1, 0x00c1c1c1, 0x00c1c1c1, 0x00cfcfcf, 0x00cfcfcf, 0x00c9c9c9, 0x00c9c9c9, 0x0034495e, 0x003498db, 0x003498db, 0x0022628c, 0x003498db, 0x0034495e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c1c1c1, 0x0034495e, 0x0034495e, 0x00cfcfcf, 0x00cfcfcf, 0x00c9c9c9, 0x00c9c9c9, 0x008d8d8d, 0x00c9c9c9, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x0098772c, 0x0098772c, 0x0098772c, 0x00cfcfcf, 0x00c9c9c9, 0x00c9c9c9, 0x008d8d8d, 0x00c9c9c9, 0x00cfcfcf, 0x00c1c1c1, 0x0098772c, 0x00f0d6af, 0x00e6c793, 0x0098772c, 0x00c9c9c9, 0x00c1c1c1, 0x00242424, 0x00595959, 0x00242424, 0x00bf360c, 0x00c45602, 0x00f57c00, 0x00ffab00, 0x00bf360c, 0x00ffab00, 0x00ffe57f, 0x00c1c1c1, 0x00c1c1c1, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008d8d8d, 0x0034495e, 0x0034495e, 0x003498db, 0x0022628c, 0x003498db, 0x0034495e, 0x00c9c9c9, 0x00c9c9c9, 0x0034495e, 0x002a7aaf, 0x0034495e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008d8d8d, 0x00c9c9c9, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00bd9560, 0x0098772c, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008d8d8d, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00bd9560, 0x00bd9560, 0x00c9c9c9, 0x00c9c9c9, 0x00703624, 0x00424242, 0x00242424, 0x00c9c9c9, 0x00bf360c, 0x00f57c00, 0x00ffab00, 0x00ffab00, 0x00bf360c, 0x00ffab00, 0x00ffecb3, 0x00c9c9c9, 0x00cfcfcf, 0x00cfcfcf, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c1c1c1, 0x00c1c1c1, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x007f7f7f, 0x00c9c9c9, 0x00c9c9c9, 0x0034495e, 0x003498db, 0x0022628c, 0x003498db, 0x0034495e, 0x0034495e, 0x002a7aaf, 0x0034495e, 0x00c1c1c1, 0x00c1c1c1, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x007f7f7f, 0x00c9c9c9, 0x00bd9560, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00f0d6af, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0098772c, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x007f7f7f, 0x00c9c9c9, 0x00c9c9c9, 0x00cfcfcf, 0x00c1c1c1, 0x00c1c1c1, 0x00cfcfcf, 0x00cfcfcf, 0x00703624, 0x0096685a, 0x0094472e, 0x00c1c1c1, 0x00c1c1c1, 0x00bdbdbd, 0x00f57c00, 0x00bf360c, 0x00bf360c, 0x00ffab00, 0x00ffab00, 0x00ffecb3, 0x00c1c1c1, 0x00c1c1c1, 0x00cfcfcf, 0x00cfcfcf, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x007f7f7f, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x0034495e, 0x003498db, 0x0022628c, 0x002a3a4b, 0x002a3a4b, 0x002a7aaf, 0x0034495e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x007f7f7f, 0x00c9c9c9, 0x00bd9560, 0x00000000, 0x00bd9560, 0x00e6c793, 0x00000000, 0x00f0d6af, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x0098772c, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x007f7f7f, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00703624, 0x0096685a, 0x0094472e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00f57c00, 0x00ffab00, 0x00ffab00, 0x00ffab00, 0x00ffab00, 0x00ffecb3, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00cfcfcf, 0x00c1c1c1, 0x00c1c1c1, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x0034495e, 0x0034495e, 0x002a7aaf, 0x002a7aaf, 0x0034495e, 0x00c1c1c1, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00bd9560, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00f0d6af, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00bd9560, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00703624, 0x0096685a, 0x0094472e, 0x00c1c1c1, 0x00c1c1c1, 0x00c9c9c9, 0x00f57c00, 0x00ffab00, 0x00ffab00, 0x00ffe57f, 0x00ffe57f, 0x00ffe57f, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00cfcfcf, 0x00cfcfcf, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x00808080, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x0034495e, 0x002a7aaf, 0x002a7aaf, 0x0034495e, 0x0034495e, 0x00f1c40f, 0x00e67e22, 0x00737373, 0x00808080, 0x00808080, 0x00808080, 0x008e8e8e, 0x00737373, 0x00737373, 0x00bd9560, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00f0d6af, 0x00000000, 0x00e6c793, 0x00000000, 0x00f0d6af, 0x00bd9560, 0x00808080, 0x00808080, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00703624, 0x0096685a, 0x0094472e, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00ffab00, 0x00808080, 0x00808080, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00737373, 0x0034495e, 0x002a7aaf, 0x002a7aaf, 0x0034495e, 0x0034495e, 0x00f1c40f, 0x00e67e22, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00bd9560, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00f0d6af, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00bd9560, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00737373, 0x00242424, 0x00424242, 0x0094472e, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 
	0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x0034495e, 0x002a7aaf, 0x0034495e, 0x0034495e, 0x008e8e8e, 0x00c9c9c9, 0x00e67e22, 0x00f1c40f, 0x00e67e22, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00e65100, 0x00595959, 0x00242424, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x0034495e, 0x0034495e, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00e67e22, 0x00f1c40f, 0x0034495e, 0x0034495e, 0x0034495e, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00c9c9c9, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00f57c00, 0x00e65100, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x008e8e8e, 0x00808080, 0x00808080, 0x00808080, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x008e8e8e, 0x008e8e8e, 0x00808080, 0x00808080, 0x008e8e8e, 0x00808080, 0x00808080, 0x0034495e, 0x003498db, 0x003498db, 0x0034495e, 0x00737373, 0x00737373, 0x00808080, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00e65100, 0x008e8e8e, 0x008e8e8e, 0x008e8e8e, 0x00808080, 0x00808080, 0x008e8e8e, 0x00808080, 0x00808080, 0x00808080, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x008e8e8e, 0x008e8e8e, 0x00808080, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x0034495e, 0x0034495e, 0x0034495e, 0x0034495e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00bdbdbd, 0x00737373, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00808080, 0x00808080, 0x00808080, 0x008d8d8d, 0x008d8d8d, 0x007f7f7f, 0x007f7f7f, 0x007f7f7f, 0x000097a7, 0x000097a7, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x000097a7, 0x000097a7, 0x007f7f7f, 0x00808080, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x008e8e8e, 0x00808080, 0x00808080, 
	0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x000097a7, 0x00ffffff, 0x00ffffff, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x00ffffff, 0x004dd0e1, 0x004dd0e1, 0x00ffffff, 0x00ffffff, 0x000097a7, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c1c1c1, 0x00c1c1c1, 0x00c1c1c1, 0x00cfcfcf, 0x00cfcfcf, 0x00c9c9c9, 0x00ffffff, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x0026c6da, 0x0026c6da, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x00ffffff, 0x0026c6da, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x00ffffff, 0x008d8d8d, 0x00c9c9c9, 0x00cfcfcf, 0x00c1c1c1, 0x00c1c1c1, 0x00c1c1c1, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x000097a7, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x0026c6da, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x000097a7, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00cfcfcf, 0x00cfcfcf, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c1c1c1, 0x00c1c1c1, 0x00bdbdbd, 0x000097a7, 0x004dd0e1, 0x004dd0e1, 0x00ffffff, 0x00e0f7fa, 0x00ffffff, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x000097a7, 0x00c9c9c9, 0x00c9c9c9, 0x00cfcfcf, 0x00c1c1c1, 0x00c1c1c1, 0x00cfcfcf, 0x00cfcfcf, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x000097a7, 0x004dd0e1, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00546e7a, 0x00000000, 0x00000000, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x004dd0e1, 0x00e0f7fa, 0x00e0f7fa, 0x004dd0e1, 0x004dd0e1, 0x000097a7, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00cfcfcf, 0x00c1c1c1, 0x00c1c1c1, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x000097a7, 0x004dd0e1, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00ed1c24, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x00e0f7fa, 0x00e0f7fa, 0x004dd0e1, 0x004dd0e1, 0x00e0f7fa, 0x00e0f7fa, 0x000097a7, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00cfcfcf, 0x00cfcfcf, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x000097a7, 0x004dd0e1, 0x004dd0e1, 0x00ffffff, 0x00e0f7fa, 0x00ffffff, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x00e0f7fa, 0x00e0f7fa, 0x004dd0e1, 0x004dd0e1, 0x00e0f7fa, 0x00e0f7fa, 0x000097a7, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x000097a7, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00ed1c24, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x004dd0e1, 0x00e0f7fa, 0x00e0f7fa, 0x004dd0e1, 0x004dd0e1, 0x000097a7, 0x00bdbdbd, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 
	0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x000097a7, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00ed1c24, 0x00ed1c24, 0x00ed1c24, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00000000, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x004dd0e1, 0x00e0f7fa, 0x00e0f7fa, 0x004dd0e1, 0x004dd0e1, 0x000097a7, 0x00bdbdbd, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x000097a7, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x00e0f7fa, 0x00e0f7fa, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x000097a7, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x008e8e8e, 0x00808080, 0x00808080, 0x00808080, 0x00737373, 0x00737373, 0x000097a7, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x00e0f7fa, 0x00e0f7fa, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00000000, 0x00000000, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00000000, 0x00000000, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x000097a7, 0x00808080, 0x00808080, 0x008e8e8e, 0x008e8e8e, 0x008e8e8e, 0x00808080, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00ffeb3b, 0x000097a7, 0x004dd0e1, 0x00e0f7fa, 0x00e0f7fa, 0x00e0f7fa, 0x00e0f7fa, 0x00e0f7fa, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x00ffffff, 0x00e0f7fa, 0x00ffffff, 0x004dd0e1, 0x004dd0e1, 0x000097a7, 0x00c9c9c9, 0x00ffeb3b, 0x00c9c9c9, 0x008e8e8e, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00ffc42e, 0x00ffeb3b, 0x000097a7, 0x004dd0e1, 0x00e0f7fa, 0x00e0f7fa, 0x00e0f7fa, 0x00e0f7fa, 0x00e0f7fa, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x004dd0e1, 0x000097a7, 0x00ffc42e, 0x00ffeb3b, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00bdbdbd, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x00e0f7fa, 0x00e0f7fa, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x004dd0e1, 0x000097a7, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ff8c00, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00ff8c00, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00000000, 0x00000000, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00000000, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x00ffffff, 0x00e0f7fa, 0x00ffffff, 0x004dd0e1, 0x004dd0e1, 0x00ff8c00, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00ff8c00, 0x00c9c9c9, 0x00bdbdbd, 0x00bdbdbd, 0x00808080, 0x00808080, 0x00808080, 0x00ff8c00, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00ff8c00, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x00ff8c00, 0x00ffc42e, 0x00ffeb3b, 0x00ffc42e, 0x00ff8c00, 0x008e8e8e, 0x00808080, 0x00808080, 
	0x00c9c9c9, 0x00c9c9c9, 0x00ff8c00, 0x00ff8c00, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ff8c00, 0x00ff8c00, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0037474f, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x00546e7a, 0x0037474f, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x00ff8c00, 0x00ff8c00, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ff8c00, 0x00ff8c00, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ff6200, 0x00ff6a00, 0x00ff8c00, 0x00ff8c00, 0x00ffc107, 0x00ff8c00, 0x00ff8c00, 0x00ff6a00, 0x00ff6200, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x004dd0e1, 0x00ffffff, 0x00ff6200, 0x00ff6a00, 0x00ff8c00, 0x00ff8c00, 0x00ffc107, 0x00ff8c00, 0x00ff8c00, 0x00ff6a00, 0x00ff6200, 0x00c9c9c9, 0x00c9c9c9, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00ff9800, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x0000bcd4, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00ff9800, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00ff0000, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff0000, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x00ff0000, 0x00ff2b00, 0x00ff2b00, 0x00ff6200, 0x00ff2b00, 0x00ff2b00, 0x00ff0000, 0x00cfcfcf, 0x00cfcfcf, 0x00c9c9c9, 0x00c9c9c9, 0x00ff0000, 0x00ff0000, 0x00ff2b00, 0x00ff2b00, 0x00ff2b00, 0x00ff0000, 0x00ff0000, 0x000097a7, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x000097a7, 0x0000bcd4, 0x000097a7, 0x000097a7, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x0000bcd4, 0x000097a7, 0x000097a7, 0x00ff0000, 0x00ff0000, 0x00ff2b00, 0x00ff2b00, 0x00ff2b00, 0x00ff0000, 0x00ff0000, 0x00c9c9c9, 0x00c9c9c9, 0x00cfcfcf, 0x00c1c1c1, 0x00c1c1c1, 0x00c9c9c9, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x000097a7, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x00737373, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00c9c9c9, 0x00c9c9c9, 0x00cfcfcf, 0x00cfcfcf, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x00808080, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x00808080, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x00808080, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x00808080, 0x008e8e8e, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00737373, 0x00808080, 0x00808080, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00808080, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 0x00bdbdbd, 0x00bdbdbd, 0x00c9c9c9, 0x00737373, 0x00c9c9c9, 0x00c9c9c9, 0x00c9c9c9, 0x008e8e8e, 

character: .word


	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00171717, 0x00171717, 0x00171717, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00bb8e53, 0x00bb8e53, 0x00bb8e53, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00bb8e53, 0x00bb8e53, 0x00bb8e53, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00bb8e53, 0x00277a7a, 0x00277a7a, 0x00277a7a, 0x00bb8e53, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00bb8e53, 0x00277a7a, 0x00277a7a, 0x00277a7a, 0x00bb8e53, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00bb8e53, 0x00277a7a, 0x00277a7a, 0x00277a7a, 0x00bb8e53, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00277a7a, 0x00277a7a, 0x00277a7a, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x003d1d04, 0x00000000, 0x003d1d04, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x003d1d04, 0x00000000, 0x003d1d04, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 

level2: .word

	0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00e8af84, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00e8af84, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00e8af84, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00e8af84, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00e8af84, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00e8af84, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00e8af84, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 
	0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00f51313, 0x00f51313, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00f51313, 0x00f51313, 0x00f51313, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00e8af84, 0x00000000, 0x00e8af84, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00f51313, 0x00f51313, 0x00f51313, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00e8af84, 0x00000000, 0x00e8af84, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00f51313, 0x00f51313, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00e8af84, 0x00000000, 0x00e8af84, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 
	0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffc107, 0x00ffc107, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffc107, 0x00ffc107, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffc107, 0x00ffc107, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffb700, 0x00ffb700, 0x00ff9900, 0x00ff9900, 0x00ffb700, 0x00ffb700, 0x00ffb700, 0x00ffc107, 0x00ffc107, 0x00ffe100, 0x00ffe100, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00b06700, 0x00b06700, 0x00b06700, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffc107, 0x00ffc107, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ffb700, 0x00ffb700, 0x00ffb700, 0x00ffa200, 0x00ffa200, 0x00ffe100, 0x00ffe100, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffb700, 0x00ffb700, 0x00ffb700, 0x00ffc107, 0x00ffc107, 0x00ffb700, 0x00ffb700, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ffe100, 0x00ffe100, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00b06700, 0x00b06700, 0x00b06700, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00b06700, 0x00b06700, 0x00b06700, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffc107, 0x00ffc107, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 
	0x00ffb700, 0x00ffc107, 0x00ffc107, 0x00ffe100, 0x00ffe100, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x001c504b, 0x001d4f4b, 0x001d4f4b, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00b06700, 0x00b06700, 0x00b06700, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x001c504b, 0x001d4f4b, 0x0043b5ab, 0x001d4f4b, 0x00ffb700, 0x00ffc107, 0x00ffc107, 0x00ffb700, 0x00ffb700, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ffe100, 0x00ffe100, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x001c504b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x001d4f4b, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00b06700, 0x00b06700, 0x00b06700, 0x00ff9800, 0x00ff9800, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x001d4f4b, 0x00e8af84, 0x001d4f4b, 0x0043b5ab, 0x001c4f4b, 0x001d5049, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x00e8af84, 0x00e8af84, 0x001d4f4b, 0x003e9c94, 0x00338780, 0x001c4f4b, 0x001d5049, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00422f12, 0x00338780, 0x00338780, 0x00422f12, 0x00422f12, 0x00e8af84, 0x00e8af84, 0x001d4f4b, 0x00338780, 0x00338780, 0x001c4f4b, 0x001d5049, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x007d6027, 0x005e4520, 0x007d6027, 0x00338780, 0x005e4520, 0x007d6027, 0x007d6027, 0x00e8af84, 0x00e8af84, 0x001d4f4b, 0x00338780, 0x00338780, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x005e4520, 0x001d4f4b, 0x00338780, 0x005e4520, 0x00e8af84, 0x00e8af84, 
	0x00e8af84, 0x00e8af84, 0x005e4520, 0x00338780, 0x001d4f4b, 0x005e4520, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00338780, 0x00338780, 0x001d4f4b, 0x00e8af84, 0x00e8af84, 0x007d6027, 0x007d6027, 0x005e4520, 0x00338780, 0x007d6027, 0x005e4520, 0x007d6027, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00058205, 0x00058205, 0x0028ab28, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00171717, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x002eb34f, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x001d5049, 0x001c4f4b, 0x00338780, 0x00338780, 0x001d4f4b, 0x00e8af84, 0x00e8af84, 0x00422f12, 0x00422f12, 0x00338780, 0x00338780, 0x00422f12, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00e8af84, 0x00000000, 0x00000000, 0x00000000, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x00171717, 0x00171717, 0x00171717, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x000b4019, 0x000b4019, 0x00156e2e, 0x002eb34f, 0x00e8af84, 0x00e8af84, 0x001d5049, 0x001c4f4b, 0x00338780, 0x003e9c94, 0x001d4f4b, 0x00e8af84, 0x00e8af84, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x0028ab28, 0x0028ab28, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x0028ab28, 0x0028ab28, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00184a19, 0x00000000, 0x004caf50, 0x004caf50, 0x00184a19, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00156e2e, 0x00156e2e, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x001d5049, 0x001c4f4b, 0x0043b5ab, 0x001d4f4b, 0x00e8af84, 0x001d4f4b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x0028ab28, 0x0028ab28, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x002eb34f, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x001d5049, 0x00e8af84, 0x001d4f4b, 0x001d4f4b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x001c504b, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x00058205, 0x00058205, 0x00055905, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00184a19, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x004caf50, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x000b4019, 0x002eb34f, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x000b4019, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x001d4f4b, 0x0043b5ab, 0x001d4f4b, 0x001c504b, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00055905, 0x00055905, 0x00055905, 0x00055905, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x0028ab28, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00184a19, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x000b4019, 0x000b4019, 0x002eb34f, 0x00156e2e, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffc107, 0x00ffc107, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 
	0x00b06700, 0x00b06700, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x00e8af84, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00b06700, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffc107, 0x00ffc107, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffc107, 0x00ffc107, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffc107, 0x00ffc107, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffb700, 0x00ffb700, 0x00ff9900, 0x00ff9900, 0x00ffb700, 0x00ffb700, 0x00ffb700, 0x00ffc107, 0x00ffc107, 0x00ffe100, 0x00ffe100, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x004caf50, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x004caf50, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffb700, 0x00ffb700, 0x00ff9900, 0x00ff9900, 0x00ffb700, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00b06700, 0x00b06700, 0x00b06700, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x00000000, 0x00000000, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffb700, 0x00ffb700, 0x00ffa200, 0x00ffa200, 0x00ffe100, 0x00ffe100, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffb700, 0x00ffb700, 0x00ffb700, 0x00ffc107, 0x00ffc107, 0x00ffb700, 0x00ffb700, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ffc107, 0x00ffe100, 0x00ffe100, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00184a19, 0x00184a19, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ffb700, 0x00ffb700, 0x00ffb700, 0x00ffa200, 0x00ffa200, 0x00ffe100, 0x00ffe100, 0x00bf6f00, 0x00bf6f00, 0x00bf6f00, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffa200, 0x00ffb700, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00b06700, 0x00b06700, 0x00b06700, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00b06700, 0x00b06700, 0x00b06700, 0x00ff9800, 0x00ff9800, 0x00184a19, 0x004caf50, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x00e8af84, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ffa200, 0x00ffa200, 0x00b06700, 0x00b06700, 0x00b06700, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00ff9800, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x00055905, 0x00055905, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x004caf50, 0x00184a19, 0x004caf50, 0x004caf50, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x002eb34f, 0x002eb34f, 0x00156e2e, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x003d1d04, 0x00592a05, 0x00592a05, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00184a19, 0x00000000, 0x004caf50, 0x004caf50, 0x004caf50, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x000b4019, 0x002eb34f, 0x002eb34f, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x002eb34f, 0x00156e2e, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x00156e2e, 0x000b4019, 0x00e8af84, 
	0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x003d1d04, 0x003d1d04, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x00000000, 0x00000000, 0x00de984d, 0x00000000, 0x00184a19, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x002eb34f, 0x002eb34f, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x003d1d04, 0x00592a05, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00000000, 0x00000000, 0x00523a0f, 0x00000000, 0x00de984d, 0x00000000, 0x00523a0f, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x003d1d04, 0x00592a05, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00523a0f, 0x00000000, 0x00000000, 0x00523a0f, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x003d1d04, 0x00592a05, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00735c30, 0x00523a0f, 0x00523a0f, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x0021140e, 0x0021140e, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x003d1d04, 0x003d1d04, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00523a0f, 0x00523a0f, 0x00735c30, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x0021140e, 0x00382117, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x003d1d04, 0x00592a05, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00523a0f, 0x00523a0f, 0x00735c30, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x0021140e, 0x00382117, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x003d1d04, 0x00592a05, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00523a0f, 0x00523a0f, 0x00735c30, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x0021140e, 0x00382117, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x00592a05, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00523a0f, 0x00523a0f, 0x00000000, 0x00523a0f, 0x00523a0f, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x0021140e, 0x0021140e, 0x00382117, 0x0045281d, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 
	0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x003d1d04, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x00592a05, 0x00592a05, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00000000, 0x00000000, 0x00000000, 0x00de984d, 0x00000000, 0x00000000, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x0021140e, 0x0021140e, 0x0021140e, 0x0045281d, 0x0045281d, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x00e8af84, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 
level3: .word


	0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00bbdefb, 0x00bbdefb, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x0003122b, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x0003122b, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x0003122b, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x0003122b, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x0003122b, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x0003122b, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x0003122b, 0x00000000, 0x00000000, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00000000, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x00000000, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00d26b20, 0x00d26b20, 0x00d26b20, 0x00d26b20, 0x00d26b20, 0x00d26b20, 0x00d26b20, 0x0003122b, 
	0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00d26b20, 0x00000000, 0x00000000, 0x00d26b20, 0x00000000, 0x00d26b20, 0x00d26b20, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00c62828, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00d26b20, 0x00000000, 0x00d26b20, 0x00d26b20, 0x00000000, 0x00000000, 0x00d26b20, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00c62828, 0x00c62828, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00d26b20, 0x00000000, 0x00000000, 0x00d26b20, 0x00000000, 0x00d26b20, 0x00d26b20, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00c62828, 0x00c62828, 0x00c62828, 0x0003122b, 0x0003122b, 0x0003122b, 0x00d26b20, 0x00d26b20, 0x00d26b20, 0x00d26b20, 0x00d26b20, 0x00d26b20, 0x00d26b20, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00b0bec5, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00b0bec5, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00b0bec5, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0078909c, 0x0078909c, 0x0078909c, 0x0078909c, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x0003122b, 
	0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00f51313, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00969696, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x00828282, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 
	0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x001c504b, 0x001d4f4b, 0x001d4f4b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x001c504b, 0x001d4f4b, 0x0043b5ab, 0x001d4f4b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00969696, 0x00727272, 0x00727272, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x001c504b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x001d4f4b, 0x001d4f4b, 0x009b9b9b, 0x001d5049, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x001d4f4b, 0x0003122b, 0x001d4f4b, 0x0043b5ab, 0x001c4f4b, 0x001d5049, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x0003122b, 0x0003122b, 0x001d4f4b, 0x003e9c94, 0x00338780, 0x001c4f4b, 0x001d5049, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00422f12, 0x00338780, 0x00338780, 0x00422f12, 0x00422f12, 0x0003122b, 0x0003122b, 0x001d4f4b, 0x00338780, 0x00338780, 0x001c4f4b, 0x001d5049, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x007d6027, 0x005e4520, 0x007d6027, 0x00338780, 0x005e4520, 0x007d6027, 0x007d6027, 0x0003122b, 0x0003122b, 0x001d4f4b, 0x00338780, 0x00338780, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x005e4520, 0x001d4f4b, 0x00338780, 0x005e4520, 0x0003122b, 0x0003122b, 
	0x0003122b, 0x0003122b, 0x005e4520, 0x00338780, 0x001d4f4b, 0x005e4520, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00338780, 0x00338780, 0x001d4f4b, 0x0003122b, 0x0003122b, 0x007d6027, 0x007d6027, 0x005e4520, 0x00338780, 0x007d6027, 0x005e4520, 0x007d6027, 0x0003122b, 0x0003122b, 0x0003122b, 0x00058205, 0x00058205, 0x0028ab28, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00171717, 0x00000000, 0x00bcdbe0, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x002eb34f, 0x0003122b, 0x0003122b, 0x0003122b, 0x001d5049, 0x001c4f4b, 0x00338780, 0x00338780, 0x001d4f4b, 0x0003122b, 0x0003122b, 0x00422f12, 0x00422f12, 0x00338780, 0x00338780, 0x00422f12, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x0003122b, 0x00000000, 0x00000000, 0x00000000, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x00171717, 0x00171717, 0x00171717, 0x00bcdbe0, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x000b4019, 0x000b4019, 0x00156e2e, 0x002eb34f, 0x0003122b, 0x0003122b, 0x001d5049, 0x001c4f4b, 0x00338780, 0x003e9c94, 0x001d4f4b, 0x0003122b, 0x0003122b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x0028ab28, 0x0028ab28, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x0028ab28, 0x0028ab28, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00184a19, 0x00000000, 0x004caf50, 0x004caf50, 0x00184a19, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00156e2e, 0x00156e2e, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x001d5049, 0x001c4f4b, 0x0043b5ab, 0x001d4f4b, 0x0003122b, 0x001d4f4b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x0028ab28, 0x0028ab28, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x002eb34f, 0x0003122b, 0x0003122b, 0x0003122b, 0x001d5049, 0x0003122b, 0x001d4f4b, 0x001d4f4b, 0x001d4f4b, 0x00338780, 0x001d4f4b, 0x001c504b, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x00058205, 0x00058205, 0x00055905, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00184a19, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x004caf50, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x000b4019, 0x002eb34f, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x000b4019, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x001d4f4b, 0x0043b5ab, 0x001d4f4b, 0x001c504b, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00055905, 0x00055905, 0x00055905, 0x00055905, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x00058205, 0x0028ab28, 0x0028ab28, 0x0028ab28, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00184a19, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x000b4019, 0x000b4019, 0x002eb34f, 0x00156e2e, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x001d4f4b, 0x001d4f4b, 0x001c504b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x0003122b, 0x0003122b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 
	0x00afafaf, 0x009b9b9b, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00828282, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x008bc34a, 0x00000000, 0x0003122b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00828282, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x004caf50, 0x008bc34a, 0x004caf50, 0x008bc34a, 0x008bc34a, 0x004caf50, 0x004caf50, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x004caf50, 0x004caf50, 0x004caf50, 0x008bc34a, 0x00000000, 0x00000000, 0x0003122b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x00727272, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x007c7c7c, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00969696, 0x00727272, 0x00727272, 0x00727272, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x009b9b9b, 0x009b9b9b, 0x00184a19, 0x00184a19, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x00000000, 0x0003122b, 0x0003122b, 0x009b9b9b, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x007c7c7c, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x00969696, 0x00727272, 0x00727272, 0x00727272, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00184a19, 0x004caf50, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x0003122b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00afafaf, 0x00afafaf, 0x00afafaf, 0x009b9b9b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x00055905, 0x00055905, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x004caf50, 0x00184a19, 0x004caf50, 0x004caf50, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x002eb34f, 0x002eb34f, 0x00156e2e, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x003d1d04, 0x00592a05, 0x00592a05, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00184a19, 0x00000000, 0x004caf50, 0x004caf50, 0x004caf50, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x000b4019, 0x002eb34f, 0x002eb34f, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x002eb34f, 0x00156e2e, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x002eb34f, 0x00156e2e, 0x000b4019, 0x0003122b, 
	0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x003d1d04, 0x003d1d04, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00184a19, 0x00184a19, 0x00184a19, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00184a19, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x00156e2e, 0x00156e2e, 0x00156e2e, 0x002eb34f, 0x002eb34f, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x003d1d04, 0x00592a05, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00000000, 0x00000000, 0x00523a0f, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00523a0f, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x003d1d04, 0x00592a05, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00523a0f, 0x00000000, 0x00000000, 0x00523a0f, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x000b4019, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x003d1d04, 0x00592a05, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00735c30, 0x00523a0f, 0x00523a0f, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0021140e, 0x0021140e, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x003d1d04, 0x003d1d04, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00523a0f, 0x00523a0f, 0x00735c30, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0021140e, 0x00382117, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x003d1d04, 0x00592a05, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00523a0f, 0x00523a0f, 0x00735c30, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0021140e, 0x00382117, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x003d1d04, 0x00592a05, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00523a0f, 0x00523a0f, 0x00735c30, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0021140e, 0x00382117, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x00592a05, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00523a0f, 0x00523a0f, 0x00000000, 0x00523a0f, 0x00523a0f, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0021140e, 0x0021140e, 0x00382117, 0x0045281d, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 
	0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x003d1d04, 0x003d1d04, 0x003d1d04, 0x00592a05, 0x00592a05, 0x00592a05, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x00000000, 0x00000000, 0x00000000, 0x00b6e3e3, 0x00000000, 0x00000000, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0021140e, 0x0021140e, 0x0021140e, 0x0045281d, 0x0045281d, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x0003122b, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x0082c784, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0082c784, 0x0082c784, 0x004caf50, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x0082c784, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x004caf50, 0x004caf50, 0x002d6930, 0x002d6930, 0x004caf50, 0x002d6930, 0x0048332b, 0x0048332b, 0x002d6930, 0x004caf50, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x0048332b, 0x002b1e19, 0x0048332b, 0x002d6930, 0x0048332b, 0x00795548, 0x00795548, 0x0048332b, 0x002d6930, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x00795548, 0x00795548, 0x00795548, 0x0048332b, 0x00795548, 0x0048332b, 0x0048332b, 0x00bb8e53, 0x0048332b, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x0048332b, 0x0077582f, 0x00795548, 0x00795548, 0x002b1e19, 0x0077582f, 0x00795548, 0x0048332b, 0x0048332b, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 0x0048332b, 0x00795548, 0x00795548, 0x00b38546, 0x0077582f, 0x00795548, 0x00795548, 0x00795548, 0x0077582f, 0x00795548, 
	
endgame: .word

	0x008d8d8d, 0x00959595, 0x00898989, 0x00919191, 0x00868686, 0x00898989, 0x00898989, 0x00959595, 0x00959595, 0x00959595, 0x00929292, 0x00868686, 0x00878787, 0x00000000, 0x009b9b9b, 0x009b9b9b, 0x007a7a7a, 0x00525252, 0x009e9e9e, 0x008a8a8a, 0x008e8e8e, 0x00898989, 0x00929292, 0x00929292, 0x00898989, 0x009b9b9b, 0x00000000, 0x008a8a8a, 0x00979797, 0x008e8e8e, 0x00737373, 0x004a4a4a, 0x008d8d8d, 0x00959595, 0x00898989, 0x00919191, 0x00868686, 0x00898989, 0x00898989, 0x00959595, 0x00959595, 0x00959595, 0x00929292, 0x00868686, 0x00878787, 0x00000000, 0x009b9b9b, 0x009b9b9b, 0x007a7a7a, 0x00525252, 0x009e9e9e, 0x008a8a8a, 0x008e8e8e, 0x00898989, 0x00929292, 0x00929292, 0x00898989, 0x009b9b9b, 0x00000000, 0x008a8a8a, 0x00979797, 0x008e8e8e, 0x00737373, 0x004a4a4a, 0x00535353, 0x006a6a6a, 0x00828282, 0x007e7e7e, 0x009b9b9b, 0x007b7b7b, 0x007b7b7b, 0x007b7b7b, 0x007b7b7b, 0x009b9b9b, 0x00777777, 0x00898989, 0x008d8d8d, 0x00000000, 0x00505050, 0x00838383, 0x00919191, 0x00666666, 0x00747474, 0x00949494, 0x00949494, 0x00767676, 0x009b9b9b, 0x007b7b7b, 0x006f6f6f, 0x00919191, 0x00000000, 0x00484848, 0x00606060, 0x007e7e7e, 0x00555555, 0x009a9a9a, 0x00535353, 0x006a6a6a, 0x00828282, 0x007e7e7e, 0x009b9b9b, 0x007b7b7b, 0x007b7b7b, 0x007b7b7b, 0x007b7b7b, 0x009b9b9b, 0x00777777, 0x00898989, 0x008d8d8d, 0x00000000, 0x00505050, 0x00838383, 0x00919191, 0x00666666, 0x00747474, 0x00949494, 0x00949494, 0x00767676, 0x009b9b9b, 0x007b7b7b, 0x006f6f6f, 0x00919191, 0x00000000, 0x00484848, 0x00606060, 0x007e7e7e, 0x00555555, 0x009a9a9a, 0x006b6b6b, 0x00838383, 0x00828282, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00747474, 0x009f9f9f, 0x00000000, 0x00505050, 0x00696969, 0x00828282, 0x007b7b7b, 0x00575757, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00838383, 0x008a8a8a, 0x00979797, 0x00000000, 0x00505050, 0x006b6b6b, 0x00585858, 0x008a8a8a, 0x00919191, 0x006b6b6b, 0x00838383, 0x00828282, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00747474, 0x009f9f9f, 0x00000000, 0x00505050, 0x00696969, 0x00828282, 0x007b7b7b, 0x00575757, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00838383, 0x008a8a8a, 0x00979797, 0x00000000, 0x00505050, 0x006b6b6b, 0x00585858, 0x008a8a8a, 0x00919191, 0x006a6a6a, 0x00828282, 0x00848484, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00919191, 0x00919191, 0x00000000, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x008a8a8a, 0x008a8a8a, 0x00000000, 0x00696969, 0x007e7e7e, 0x007d7d7d, 0x006f6f6f, 0x00979797, 0x006a6a6a, 0x00828282, 0x00848484, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00919191, 0x00919191, 0x00000000, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x008a8a8a, 0x008a8a8a, 0x00000000, 0x00696969, 0x007e7e7e, 0x007d7d7d, 0x006f6f6f, 0x00979797, 0x00696969, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00919191, 0x009f9f9f, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x008a8a8a, 0x00979797, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x008a8a8a, 0x008a8a8a, 0x00696969, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00919191, 0x009f9f9f, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x008a8a8a, 0x00979797, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x008a8a8a, 0x008a8a8a, 0x00515151, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00696969, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x005e5e5e, 0x00959595, 0x00000000, 0x00505050, 0x00696969, 0x00696969, 0x00828282, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x005c5c5c, 0x00919191, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00585858, 0x00979797, 0x00515151, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00696969, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x005e5e5e, 0x00959595, 0x00000000, 0x00505050, 0x00696969, 0x00696969, 0x00828282, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x005c5c5c, 0x00919191, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00585858, 0x00979797, 0x006b6b6b, 0x006b6b6b, 0x00696969, 0x00696969, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00696969, 0x006a6a6a, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00505050, 0x00696969, 0x00eb0000, 0x00eb0000, 0x00696969, 0x00505050, 0x00696969, 0x00eb0000, 0x00eb0000, 0x009f9f9f, 0x00000000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00959595, 0x006b6b6b, 0x006b6b6b, 0x00696969, 0x00696969, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00696969, 0x00eb0000, 0x00656565, 0x009f9f9f, 0x00000000, 0x00eb0000, 0x00696969, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00696969, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x009f9f9f, 0x00000000, 0x004f4f4f, 0x00696969, 0x00505050, 0x005f5f5f, 0x00959595, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00040404, 0x00111111, 0x00111111, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00040404, 0x00111111, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00a6a6a6, 0x00a6a6a6, 0x00b4b4b4, 0x00b4b4b4, 0x00eb0000, 0x00989898, 0x000e0e0e, 0x00393939, 0x00787878, 0x00979797, 0x00888888, 0x00eb0000, 0x008e8e8e, 0x00979797, 0x009c9c9c, 0x00eb0000, 0x009e9e9e, 0x008e8e8e, 0x00eb0000, 0x00000000, 0x00eb0000, 0x009b9b9b, 0x00eb0000, 0x00a8a8a8, 0x00eb0000, 0x009b9b9b, 0x009b9b9b, 0x00eb0000, 0x00a8a8a8, 0x00a5a5a5, 0x00989898, 0x009f9f9f, 0x00a6a6a6, 0x00a6a6a6, 0x00b4b4b4, 0x00b4b4b4, 0x00eb0000, 0x00989898, 0x000e0e0e, 0x00393939, 0x00eb0000, 0x00979797, 0x00eb0000, 0x008e8e8e, 0x008e8e8e, 0x00979797, 0x00eb0000, 0x009c9c9c, 0x00eb0000, 0x008e8e8e, 0x00595959, 0x00000000, 0x009b9b9b, 0x00eb0000, 0x009b9b9b, 0x00a8a8a8, 0x00eb0000, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00a8a8a8, 0x00a5a5a5, 0x00989898, 0x009f9f9f, 0x00a5a5a5, 0x00828282, 0x00a5a5a5, 0x00828282, 0x00eb0000, 0x00989898, 0x00111111, 0x00454545, 0x00535353, 0x007d7d7d, 0x00818181, 0x00eb0000, 0x00767676, 0x00767676, 0x00767676, 0x00eb0000, 0x00787878, 0x00818181, 0x00eb0000, 0x000a0a0a, 0x00484848, 0x00eb0000, 0x00a5a5a5, 0x00828282, 0x00eb0000, 0x00a5a5a5, 0x00a5a5a5, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00797979, 0x00989898, 0x00a5a5a5, 0x00828282, 0x00a5a5a5, 0x00828282, 0x00eb0000, 0x00989898, 0x00111111, 0x00454545, 0x00eb0000, 0x007d7d7d, 0x00eb0000, 0x008a8a8a, 0x00767676, 0x00767676, 0x00eb0000, 0x00949494, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x000a0a0a, 0x00484848, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00a5a5a5, 0x00a5a5a5, 0x00828282, 0x00a5a5a5, 0x007e7e7e, 0x00797979, 0x00989898, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00eb0000, 0x00a8a8a8, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00646464, 0x00838383, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00777777, 0x006b6b6b, 0x00eb0000, 0x000a0a0a, 0x00474747, 0x00585858, 0x005b5b5b, 0x007b7b7b, 0x00eb0000, 0x00828282, 0x00828282, 0x00eb0000, 0x00828282, 0x00838383, 0x009f9f9f, 0x00a2a2a2, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00eb0000, 0x00a8a8a8, 0x000a0a0a, 0x00505050, 0x00eb0000, 0x00646464, 0x00838383, 0x00eb0000, 0x00828282, 0x00eb0000, 0x00828282, 0x00828282, 0x00eb0000, 0x006b6b6b, 0x00989898, 0x000a0a0a, 0x00474747, 0x00eb0000, 0x00eb0000, 0x007b7b7b, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00838383, 0x009f9f9f, 0x00a2a2a2, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00eb0000, 0x009b9b9b, 0x00eb0000, 0x00676767, 0x00eb0000, 0x00616161, 0x00676767, 0x00eb0000, 0x00828282, 0x00828282, 0x00828282, 0x00eb0000, 0x00707070, 0x00616161, 0x00eb0000, 0x00000000, 0x00696969, 0x007b7b7b, 0x00767676, 0x00575757, 0x00eb0000, 0x00828282, 0x00828282, 0x00eb0000, 0x00828282, 0x00828282, 0x009f9f9f, 0x00989898, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00eb0000, 0x009b9b9b, 0x00000000, 0x00676767, 0x00eb0000, 0x00616161, 0x00676767, 0x00eb0000, 0x00828282, 0x00eb0000, 0x00828282, 0x00828282, 0x00eb0000, 0x00616161, 0x009b9b9b, 0x00000000, 0x00696969, 0x00eb0000, 0x00767676, 0x00eb0000, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x009f9f9f, 0x00989898, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00696969, 0x00eb0000, 0x006f6f6f, 0x00575757, 0x00eb0000, 0x00828282, 0x00828282, 0x00828282, 0x00eb0000, 0x006b6b6b, 0x005f5f5f, 0x00eb0000, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00eb0000, 0x00828282, 0x00828282, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00a8a8a8, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x006f6f6f, 0x00575757, 0x008a8a8a, 0x00eb0000, 0x00828282, 0x00828282, 0x007f7f7f, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00696969, 0x00eb0000, 0x00828282, 0x00828282, 0x00eb0000, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x009b9b9b, 0x00a8a8a8, 0x00838383, 0x00828282, 0x00696969, 0x00828282, 0x00696969, 0x00a5a5a5, 0x00000000, 0x00696969, 0x00696969, 0x00767676, 0x00555555, 0x00a3a3a3, 0x00696969, 0x00696969, 0x00696969, 0x00787878, 0x005f5f5f, 0x00616161, 0x009b9b9b, 0x00000000, 0x00505050, 0x00696969, 0x00696969, 0x00828282, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x00626262, 0x009b9b9b, 0x00838383, 0x00828282, 0x00696969, 0x00828282, 0x00696969, 0x00a5a5a5, 0x00000000, 0x00696969, 0x00696969, 0x00767676, 0x00555555, 0x00a3a3a3, 0x00696969, 0x00696969, 0x00696969, 0x00787878, 0x005f5f5f, 0x00616161, 0x009b9b9b, 0x00000000, 0x00505050, 0x00696969, 0x00696969, 0x00828282, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x00626262, 0x009b9b9b, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x00696969, 0x00a5a5a5, 0x00000000, 0x00505050, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x006a6a6a, 0x00696969, 0x00505050, 0x00676767, 0x00545454, 0x00656565, 0x009f9f9f, 0x00000000, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00696969, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x00656565, 0x009f9f9f, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x00696969, 0x00a5a5a5, 0x00000000, 0x00505050, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x006a6a6a, 0x00696969, 0x00505050, 0x00676767, 0x00545454, 0x00656565, 0x009f9f9f, 0x00000000, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00696969, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x00656565, 0x009f9f9f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00cc864f, 0x00131326, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00a5a5a5, 0x00b4b4b4, 0x00a5a5a5, 0x00b4b4b4, 0x009b9b9b, 0x00949494, 0x00949494, 0x00a1a1a1, 0x00a1a1a1, 0x009c9c9c, 0x00a1a1a1, 0x00a5a5a5, 0x00a5a5a5, 0x00000000, 0x00a5a5a5, 0x009b9b9b, 0x00949494, 0x00a1a1a1, 0x00a1a1a1, 0x00949494, 0x00949494, 0x00949494, 0x00a9a9a9, 0x00b4b4b4, 0x00a5a5a5, 0x00a5a5a5, 0x00000000, 0x00919191, 0x00949494, 0x00949494, 0x00919191, 0x009f9f9f, 0x00131326, 0x00cc864f, 0x00131326, 0x00b4b4b4, 0x009b9b9b, 0x00949494, 0x00949494, 0x00a1a1a1, 0x00a1a1a1, 0x009c9c9c, 0x00a1a1a1, 0x00a5a5a5, 0x00a5a5a5, 0x00000000, 0x00a5a5a5, 0x009b9b9b, 0x00949494, 0x00a1a1a1, 0x00a1a1a1, 0x00949494, 0x00949494, 0x00949494, 0x00a9a9a9, 0x00b4b4b4, 0x00a5a5a5, 0x00a5a5a5, 0x00000000, 0x00919191, 0x00949494, 0x00949494, 0x00919191, 0x009f9f9f, 0x00505050, 0x00696969, 0x00828282, 0x00828282, 0x00a5a5a5, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x009b9b9b, 0x00767676, 0x00949494, 0x009b9b9b, 0x00000000, 0x00505050, 0x007b7b7b, 0x00949494, 0x00767676, 0x00767676, 0x00949494, 0x00949494, 0x00767676, 0x00949494, 0x00767676, 0x00767676, 0x009b9b9b, 0x00000000, 0x004b4b4b, 0x005b5b5b, 0x00858585, 0x00858585, 0x00919191, 0x00996441, 0x004c3229, 0x00828282, 0x00828282, 0x00a5a5a5, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x009b9b9b, 0x00767676, 0x00949494, 0x009b9b9b, 0x00000000, 0x00505050, 0x007b7b7b, 0x00949494, 0x00767676, 0x00767676, 0x00949494, 0x00949494, 0x00767676, 0x00949494, 0x00767676, 0x00767676, 0x009b9b9b, 0x00000000, 0x004b4b4b, 0x005b5b5b, 0x00858585, 0x00858585, 0x00919191, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x007b7b7b, 0x00727272, 0x00a1a1a1, 0x00000000, 0x00505050, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x007b7b7b, 0x00767676, 0x008f8f8f, 0x00a1a1a1, 0x00000000, 0x00505050, 0x00696969, 0x007b7b7b, 0x00858585, 0x00996441, 0x004c3229, 0x00131326, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x007b7b7b, 0x00727272, 0x00a1a1a1, 0x00000000, 0x00505050, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x007b7b7b, 0x00767676, 0x008f8f8f, 0x00a1a1a1, 0x00000000, 0x00505050, 0x00696969, 0x007b7b7b, 0x00858585, 0x008a8a8a, 0x00696969, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00949494, 0x00000000, 0x006a6a6a, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00949494, 0x00000000, 0x00696969, 0x00828282, 0x00828282, 0x006f6f6f, 0x00996441, 0x00996441, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00949494, 0x00000000, 0x006a6a6a, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00949494, 0x00000000, 0x00696969, 0x00828282, 0x00828282, 0x006f6f6f, 0x00979797, 0x00696969, 0x00828282, 0x00828282, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00a1a1a1, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00a1a1a1, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00131326, 0x004c3229, 0x004c3229, 0x00131326, 0x00ffa332, 0x00ff8423, 0x00131326, 0x00131326, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00a1a1a1, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00a1a1a1, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x008a8a8a, 0x008a8a8a, 0x00505050, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00696969, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x005f5f5f, 0x00949494, 0x00000000, 0x00505050, 0x00696969, 0x00696969, 0x00828282, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x005f5f5f, 0x00949494, 0x00131326, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00131326, 0x00696969, 0x00828282, 0x00828282, 0x005f5f5f, 0x00949494, 0x00000000, 0x00505050, 0x00696969, 0x00696969, 0x00828282, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x005f5f5f, 0x00949494, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00585858, 0x00979797, 0x00696969, 0x006a6a6a, 0x00696969, 0x006a6a6a, 0x00505050, 0x00505050, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00696969, 0x00636363, 0x009b9b9b, 0x00000000, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00696969, 0x00656565, 0x00626262, 0x004b4b4b, 0x00626262, 0x00131326, 0x00ff8423, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00505050, 0x00696969, 0x00696969, 0x00636363, 0x009b9b9b, 0x00000000, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00696969, 0x00656565, 0x00626262, 0x004b4b4b, 0x00626262, 0x004d4d4d, 0x00636363, 0x009b9b9b, 0x00000000, 0x00505050, 0x00696969, 0x00505050, 0x005f5f5f, 0x00959595, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00a5a5a5, 0x00a5a5a5, 0x00b4b4b4, 0x00b4b4b4, 0x00a5a5a5, 0x00a5a5a5, 0x00000000, 0x009b9b9b, 0x00a5a5a5, 0x00a5a5a5, 0x00969696, 0x008f8f8f, 0x008e8e8e, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x008f8f8f, 0x009b9b9b, 0x00000000, 0x009f9f9f, 0x00ff8423, 0x00ffa332, 0x00ffa332, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00a5a5a5, 0x00969696, 0x008f8f8f, 0x008e8e8e, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x008f8f8f, 0x009b9b9b, 0x00000000, 0x009f9f9f, 0x00a5a5a5, 0x009f9f9f, 0x00a8a8a8, 0x00a8a8a8, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00a5a5a5, 0x00a5a5a5, 0x009b9b9b, 0x009f9f9f, 0x00a4a4a4, 0x00838383, 0x00a5a5a5, 0x00828282, 0x00838383, 0x00a5a5a5, 0x00000000, 0x00505050, 0x00656565, 0x009b9b9b, 0x008d8d8d, 0x00858585, 0x00727272, 0x00767676, 0x00767676, 0x00949494, 0x00727272, 0x00858585, 0x00919191, 0x00000000, 0x00505050, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ffa332, 0x00ff8423, 0x00ffa332, 0x00131326, 0x008d8d8d, 0x00858585, 0x00727272, 0x00767676, 0x00767676, 0x00949494, 0x00727272, 0x00858585, 0x00919191, 0x00000000, 0x00505050, 0x00828282, 0x00a5a5a5, 0x00828282, 0x00828282, 0x00a5a5a5, 0x00a5a5a5, 0x00828282, 0x009f9f9f, 0x007b7b7b, 0x00777777, 0x00999999, 0x00838383, 0x00838383, 0x00828282, 0x00828282, 0x00a5a5a5, 0x00b4b4b4, 0x00000000, 0x00505050, 0x00686868, 0x007b7b7b, 0x00858585, 0x00858585, 0x007b7b7b, 0x00828282, 0x00828282, 0x00828282, 0x007b7b7b, 0x006b6b6b, 0x00979797, 0x00000000, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00131326, 0x00131326, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00858585, 0x00858585, 0x007b7b7b, 0x00828282, 0x00828282, 0x00828282, 0x007b7b7b, 0x006b6b6b, 0x00979797, 0x00000000, 0x00505050, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00989898, 0x00a5a5a5, 0x00858585, 0x00838383, 0x00828282, 0x00828282, 0x00a5a5a5, 0x00a4a4a4, 0x00000000, 0x00686868, 0x00818181, 0x00747474, 0x00696969, 0x009c9c9c, 0x00818181, 0x00818181, 0x00818181, 0x00818181, 0x00818181, 0x00898989, 0x008a8a8a, 0x00131326, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00994c30, 0x00131326, 0x00131326, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00131326, 0x009c9c9c, 0x00818181, 0x00818181, 0x00818181, 0x00818181, 0x00818181, 0x00898989, 0x008a8a8a, 0x00000000, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00969696, 0x00969696, 0x00848484, 0x00818181, 0x00818181, 0x00818181, 0x00a4a4a4, 0x00b2b2b2, 0x00000000, 0x00676767, 0x00686868, 0x00737373, 0x00878787, 0x00969696, 0x007f7f7f, 0x00808080, 0x007f7f7f, 0x007f7f7f, 0x00808080, 0x00888888, 0x00969696, 0x00cc6728, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00969696, 0x007f7f7f, 0x00808080, 0x007f7f7f, 0x007f7f7f, 0x00808080, 0x00888888, 0x00969696, 0x00000000, 0x00696969, 0x006a6a6a, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00969696, 0x00a2a2a2, 0x00848484, 0x00808080, 0x00696969, 0x00808080, 0x00686868, 0x00a0a0a0, 0x00000000, 0x00656565, 0x00646464, 0x00717171, 0x00565656, 0x00a0a0a0, 0x00646464, 0x00666666, 0x00646464, 0x007d7d7d, 0x007a7a7a, 0x00575757, 0x008b8b8b, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00131326, 0x00131326, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00a0a0a0, 0x00646464, 0x00666666, 0x00646464, 0x007d7d7d, 0x007a7a7a, 0x00575757, 0x008b8b8b, 0x00000000, 0x004f4f4f, 0x00696969, 0x00696969, 0x00828282, 0x006a6a6a, 0x00696969, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x00606060, 0x00989898, 0x006a6a6a, 0x004e4e4e, 0x00686868, 0x004d4d4d, 0x00656565, 0x009e9e9e, 0x00000000, 0x004b4b4b, 0x00626262, 0x00474747, 0x005a5a5a, 0x00959595, 0x00636363, 0x00626262, 0x004c4c4c, 0x00646464, 0x005c5c5c, 0x00585858, 0x00969696, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00994c30, 0x00131326, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00959595, 0x00636363, 0x00626262, 0x004c4c4c, 0x00646464, 0x005c5c5c, 0x00585858, 0x00969696, 0x00000000, 0x00676767, 0x00686868, 0x00505050, 0x00696969, 0x00696969, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x00656565, 0x009f9f9f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00131326, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00ff8423, 0x00131326, 0x00131326, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x008d8d8d, 0x00959595, 0x00898989, 0x00919191, 0x00868686, 0x00898989, 0x00898989, 0x00959595, 0x00959595, 0x00959595, 0x00929292, 0x00868686, 0x00878787, 0x00000000, 0x009b9b9b, 0x009b9b9b, 0x007a7a7a, 0x00525252, 0x009e9e9e, 0x00131326, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00ff8423, 0x00ff8423, 0x00ff8423, 0x00929292, 0x00868686, 0x00878787, 0x00000000, 0x009b9b9b, 0x009b9b9b, 0x007a7a7a, 0x00525252, 0x009e9e9e, 0x008a8a8a, 0x008e8e8e, 0x00898989, 0x00929292, 0x00929292, 0x00898989, 0x009b9b9b, 0x00000000, 0x008a8a8a, 0x00979797, 0x008e8e8e, 0x00737373, 0x004a4a4a, 0x00535353, 0x006a6a6a, 0x00828282, 0x007e7e7e, 0x009b9b9b, 0x007b7b7b, 0x007b7b7b, 0x007b7b7b, 0x007b7b7b, 0x009b9b9b, 0x00777777, 0x00898989, 0x008d8d8d, 0x00000000, 0x00505050, 0x00838383, 0x00919191, 0x00666666, 0x00747474, 0x00131326, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00131326, 0x00994c30, 0x00994c30, 0x00ff8423, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00cc6728, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00cc6728, 0x00777777, 0x00898989, 0x008d8d8d, 0x00000000, 0x00505050, 0x00838383, 0x00919191, 0x00666666, 0x00747474, 0x00949494, 0x00949494, 0x00767676, 0x009b9b9b, 0x007b7b7b, 0x006f6f6f, 0x00919191, 0x00000000, 0x00484848, 0x00606060, 0x007e7e7e, 0x00555555, 0x009a9a9a, 0x006b6b6b, 0x00838383, 0x00828282, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00747474, 0x009f9f9f, 0x00000000, 0x00505050, 0x00696969, 0x00828282, 0x007b7b7b, 0x00575757, 0x00828282, 0x00131326, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00cc6728, 0x00994c30, 0x00cc6728, 0x00ff8423, 0x00131326, 0x00131326, 0x00131326, 0x00cc6728, 0x00ff8423, 0x00ff8423, 0x00131326, 0x00828282, 0x00747474, 0x009f9f9f, 0x00000000, 0x00505050, 0x00696969, 0x00828282, 0x007b7b7b, 0x00575757, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00838383, 0x008a8a8a, 0x00979797, 0x00000000, 0x00505050, 0x006b6b6b, 0x00585858, 0x008a8a8a, 0x00919191, 0x006a6a6a, 0x00828282, 0x00848484, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00919191, 0x00919191, 0x00000000, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00994c30, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00828282, 0x00828282, 0x00919191, 0x00919191, 0x00000000, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x008a8a8a, 0x008a8a8a, 0x00000000, 0x00696969, 0x007e7e7e, 0x007d7d7d, 0x006f6f6f, 0x00979797, 0x00696969, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00919191, 0x009f9f9f, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00e575af, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00131326, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00994c30, 0x00131326, 0x00828282, 0x00828282, 0x00919191, 0x009f9f9f, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x008a8a8a, 0x00979797, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x008a8a8a, 0x008a8a8a, 0x00515151, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00696969, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x005e5e5e, 0x00959595, 0x00000000, 0x00505050, 0x00696969, 0x00696969, 0x00828282, 0x00696969, 0x00696969, 0x00828282, 0x00131326, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00994c30, 0x00131326, 0x00131326, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00696969, 0x00828282, 0x00828282, 0x005e5e5e, 0x00959595, 0x00000000, 0x00505050, 0x00696969, 0x00696969, 0x00828282, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x005c5c5c, 0x00919191, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00585858, 0x00979797, 0x006b6b6b, 0x006b6b6b, 0x00696969, 0x00696969, 0x00505050, 0x00505050, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x006a6a6a, 0x00656565, 0x009f9f9f, 0x00000000, 0x006a6a6a, 0x00696969, 0x00505050, 0x00696969, 0x00696969, 0x006a6a6a, 0x00696969, 0x00505050, 0x00131326, 0x00cc6728, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00994c30, 0x00cc6761, 0x00994c30, 0x00cc6728, 0x00cc6728, 0x00994c30, 0x00cc6761, 0x00994c30, 0x00994c30, 0x00994c30, 0x00994c30, 0x00e575af, 0x00696969, 0x00505050, 0x00696969, 0x006a6a6a, 0x00656565, 0x009f9f9f, 0x00000000, 0x006a6a6a, 0x00696969, 0x00505050, 0x00696969, 0x00696969, 0x006a6a6a, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x00656565, 0x009f9f9f, 0x00000000, 0x004f4f4f, 0x00696969, 0x00505050, 0x005f5f5f, 0x00959595, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00040404, 0x00111111, 0x00111111, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00131326, 0x00cc6728, 0x00cc6728, 0x00cc6761, 0x00cc6761, 0x00cc6761, 0x00cc6761, 0x00e575af, 0x00e575af, 0x00e575af, 0x00cc6761, 0x00cc6761, 0x00cc6728, 0x00cc6728, 0x00cc6728, 0x00040404, 0x00111111, 0x00111111, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00a6a6a6, 0x00a6a6a6, 0x00b4b4b4, 0x00b4b4b4, 0x00989898, 0x00989898, 0x000e0e0e, 0x00393939, 0x00787878, 0x00979797, 0x00888888, 0x008e8e8e, 0x008e8e8e, 0x00979797, 0x009c9c9c, 0x009c9c9c, 0x009e9e9e, 0x008e8e8e, 0x00595959, 0x00000000, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00a8a8a8, 0x00131326, 0x00cc6761, 0x00cc6761, 0x00cc6761, 0x00994c30, 0x0072392e, 0x0072392e, 0x00994c30, 0x00994c30, 0x00994c30, 0x00cc6728, 0x00cc6761, 0x00131326, 0x00989898, 0x000e0e0e, 0x00393939, 0x00787878, 0x00979797, 0x00888888, 0x008e8e8e, 0x008e8e8e, 0x00979797, 0x009c9c9c, 0x009c9c9c, 0x009e9e9e, 0x008e8e8e, 0x00595959, 0x00000000, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00a8a8a8, 0x00a8a8a8, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00a8a8a8, 0x00a5a5a5, 0x00989898, 0x009f9f9f, 0x00a5a5a5, 0x00828282, 0x00a5a5a5, 0x00828282, 0x00797979, 0x00989898, 0x00111111, 0x00454545, 0x00535353, 0x007d7d7d, 0x00818181, 0x008a8a8a, 0x00767676, 0x00767676, 0x00767676, 0x00949494, 0x00787878, 0x00818181, 0x00616161, 0x000a0a0a, 0x00484848, 0x00787878, 0x00a5a5a5, 0x00828282, 0x00828282, 0x00a5a5a5, 0x00a5a5a5, 0x00131326, 0x0072392e, 0x0072392e, 0x0072392e, 0x0072392e, 0x0072392e, 0x00131326, 0x00a5a5a5, 0x00828282, 0x00797979, 0x00989898, 0x00111111, 0x00454545, 0x00535353, 0x007d7d7d, 0x00818181, 0x008a8a8a, 0x00767676, 0x00767676, 0x00767676, 0x00949494, 0x00787878, 0x00818181, 0x00616161, 0x000a0a0a, 0x00484848, 0x00787878, 0x00a5a5a5, 0x00828282, 0x00828282, 0x00a5a5a5, 0x00a5a5a5, 0x00828282, 0x00a5a5a5, 0x007e7e7e, 0x00797979, 0x00989898, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x009b9b9b, 0x00a8a8a8, 0x000a0a0a, 0x00505050, 0x00626262, 0x00646464, 0x00838383, 0x009b9b9b, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00777777, 0x006b6b6b, 0x00989898, 0x000a0a0a, 0x00474747, 0x00585858, 0x005b5b5b, 0x007b7b7b, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00838383, 0x009f9f9f, 0x00a2a2a2, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x009b9b9b, 0x00a8a8a8, 0x000a0a0a, 0x00505050, 0x00626262, 0x00646464, 0x00838383, 0x009b9b9b, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00777777, 0x006b6b6b, 0x00989898, 0x000a0a0a, 0x00474747, 0x00585858, 0x005b5b5b, 0x007b7b7b, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00838383, 0x009f9f9f, 0x00a2a2a2, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x009b9b9b, 0x009b9b9b, 0x00000000, 0x00676767, 0x006e6e6e, 0x00616161, 0x00676767, 0x009e9e9e, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00707070, 0x00616161, 0x009b9b9b, 0x00000000, 0x00696969, 0x007b7b7b, 0x00767676, 0x00575757, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x009f9f9f, 0x00989898, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x009b9b9b, 0x009b9b9b, 0x00000000, 0x00676767, 0x006e6e6e, 0x00616161, 0x00676767, 0x009e9e9e, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00707070, 0x00616161, 0x009b9b9b, 0x00000000, 0x00696969, 0x007b7b7b, 0x00767676, 0x00575757, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x009f9f9f, 0x00989898, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x009f9f9f, 0x00adadad, 0x00000000, 0x00696969, 0x006a6a6a, 0x006f6f6f, 0x00575757, 0x008a8a8a, 0x00828282, 0x00828282, 0x00828282, 0x007f7f7f, 0x006b6b6b, 0x005f5f5f, 0x00a8a8a8, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x009b9b9b, 0x00a8a8a8, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x009f9f9f, 0x00adadad, 0x00000000, 0x00696969, 0x006a6a6a, 0x006f6f6f, 0x00575757, 0x008a8a8a, 0x00828282, 0x00828282, 0x00828282, 0x007f7f7f, 0x006b6b6b, 0x005f5f5f, 0x00a8a8a8, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x009b9b9b, 0x00a8a8a8, 0x00838383, 0x00828282, 0x00696969, 0x00828282, 0x00696969, 0x00a5a5a5, 0x00000000, 0x00696969, 0x00696969, 0x00767676, 0x00555555, 0x00a3a3a3, 0x00696969, 0x00696969, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00696969, 0x00696969, 0x00eb0000, 0x00696969, 0x00696969, 0x00eb0000, 0x00eb0000, 0x00696969, 0x00828282, 0x00eb0000, 0x00eb0000, 0x00838383, 0x00828282, 0x00696969, 0x00828282, 0x00eb0000, 0x00a5a5a5, 0x00eb0000, 0x00696969, 0x00696969, 0x00eb0000, 0x00555555, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00787878, 0x005f5f5f, 0x00616161, 0x009b9b9b, 0x00000000, 0x00505050, 0x00696969, 0x00696969, 0x00828282, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x00626262, 0x009b9b9b, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x00696969, 0x00a5a5a5, 0x00000000, 0x00505050, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x006a6a6a, 0x00696969, 0x00505050, 0x00676767, 0x00eb0000, 0x00656565, 0x009f9f9f, 0x00000000, 0x00eb0000, 0x00696969, 0x00505050, 0x00eb0000, 0x00696969, 0x00eb0000, 0x00696969, 0x00505050, 0x00eb0000, 0x00505050, 0x00eb0000, 0x009f9f9f, 0x00eb0000, 0x00505050, 0x00696969, 0x00505050, 0x00eb0000, 0x00a5a5a5, 0x00eb0000, 0x00505050, 0x00eb0000, 0x00505050, 0x00696969, 0x00eb0000, 0x006a6a6a, 0x00696969, 0x00505050, 0x00676767, 0x00545454, 0x00656565, 0x009f9f9f, 0x00000000, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00696969, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x00656565, 0x009f9f9f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00a5a5a5, 0x00b4b4b4, 0x00a5a5a5, 0x00b4b4b4, 0x009b9b9b, 0x00949494, 0x00949494, 0x00a1a1a1, 0x00a1a1a1, 0x009c9c9c, 0x00a1a1a1, 0x00a5a5a5, 0x00a5a5a5, 0x00000000, 0x00a5a5a5, 0x009b9b9b, 0x00eb0000, 0x00a1a1a1, 0x00a1a1a1, 0x00949494, 0x00eb0000, 0x00949494, 0x00a9a9a9, 0x00eb0000, 0x00a5a5a5, 0x00eb0000, 0x00000000, 0x00919191, 0x00eb0000, 0x00949494, 0x00eb0000, 0x009f9f9f, 0x00a5a5a5, 0x00eb0000, 0x00a5a5a5, 0x00b4b4b4, 0x00eb0000, 0x00949494, 0x00eb0000, 0x00eb0000, 0x00a1a1a1, 0x009c9c9c, 0x00a1a1a1, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x009b9b9b, 0x00949494, 0x00a1a1a1, 0x00a1a1a1, 0x00949494, 0x00949494, 0x00949494, 0x00a9a9a9, 0x00b4b4b4, 0x00a5a5a5, 0x00a5a5a5, 0x00000000, 0x00919191, 0x00949494, 0x00949494, 0x00919191, 0x009f9f9f, 0x00505050, 0x00696969, 0x00828282, 0x00828282, 0x00a5a5a5, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x009b9b9b, 0x00767676, 0x00949494, 0x009b9b9b, 0x00000000, 0x00505050, 0x007b7b7b, 0x00eb0000, 0x00767676, 0x00767676, 0x00949494, 0x00eb0000, 0x00767676, 0x00949494, 0x00eb0000, 0x00767676, 0x00eb0000, 0x00000000, 0x004b4b4b, 0x00eb0000, 0x00858585, 0x00eb0000, 0x00919191, 0x00505050, 0x00696969, 0x00eb0000, 0x00828282, 0x00eb0000, 0x00828282, 0x00eb0000, 0x00828282, 0x00eb0000, 0x009b9b9b, 0x00767676, 0x00949494, 0x009b9b9b, 0x00000000, 0x00eb0000, 0x007b7b7b, 0x00949494, 0x00767676, 0x00767676, 0x00949494, 0x00949494, 0x00767676, 0x00949494, 0x00767676, 0x00767676, 0x009b9b9b, 0x00000000, 0x004b4b4b, 0x005b5b5b, 0x00858585, 0x00858585, 0x00919191, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x007b7b7b, 0x00727272, 0x00a1a1a1, 0x00000000, 0x00505050, 0x00696969, 0x00eb0000, 0x00828282, 0x00828282, 0x00828282, 0x00eb0000, 0x00828282, 0x007b7b7b, 0x00eb0000, 0x008f8f8f, 0x00eb0000, 0x00000000, 0x00505050, 0x00eb0000, 0x007b7b7b, 0x00eb0000, 0x008a8a8a, 0x00696969, 0x00828282, 0x00828282, 0x00eb0000, 0x00eb0000, 0x00828282, 0x00eb0000, 0x00828282, 0x00828282, 0x00eb0000, 0x007b7b7b, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x007b7b7b, 0x00767676, 0x008f8f8f, 0x00a1a1a1, 0x00000000, 0x00505050, 0x00696969, 0x007b7b7b, 0x00858585, 0x008a8a8a, 0x00696969, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00949494, 0x00000000, 0x006a6a6a, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00949494, 0x00000000, 0x00696969, 0x00828282, 0x00828282, 0x006f6f6f, 0x00979797, 0x00696969, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00949494, 0x00000000, 0x006a6a6a, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00949494, 0x00000000, 0x00696969, 0x00828282, 0x00828282, 0x006f6f6f, 0x00979797, 0x00696969, 0x00828282, 0x00828282, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00a1a1a1, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00a1a1a1, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x008a8a8a, 0x008a8a8a, 0x00696969, 0x00828282, 0x00828282, 0x00838383, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00a1a1a1, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00949494, 0x00a1a1a1, 0x00000000, 0x00696969, 0x00696969, 0x00828282, 0x008a8a8a, 0x008a8a8a, 0x00505050, 0x00696969, 0x00696969, 0x00828282, 0x00828282, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00828282, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00696969, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00828282, 0x00eb0000, 0x00979797, 0x00505050, 0x00696969, 0x00696969, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00696969, 0x00eb0000, 0x00828282, 0x00828282, 0x00eb0000, 0x00949494, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00696969, 0x00eb0000, 0x00696969, 0x00696969, 0x00828282, 0x00eb0000, 0x00696969, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00696969, 0x00828282, 0x00585858, 0x00979797, 0x00696969, 0x006a6a6a, 0x00696969, 0x006a6a6a, 0x00505050, 0x00eb0000, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00eb0000, 0x00636363, 0x009b9b9b, 0x00000000, 0x00eb0000, 0x00696969, 0x00eb0000, 0x00696969, 0x00696969, 0x00eb0000, 0x00626262, 0x004b4b4b, 0x00626262, 0x004d4d4d, 0x00eb0000, 0x009b9b9b, 0x00000000, 0x00505050, 0x00eb0000, 0x00505050, 0x00eb0000, 0x00959595, 0x00696969, 0x006a6a6a, 0x00696969, 0x00eb0000, 0x00505050, 0x00505050, 0x00eb0000, 0x00696969, 0x00eb0000, 0x00696969, 0x00696969, 0x00eb0000, 0x009b9b9b, 0x00000000, 0x00eb0000, 0x00696969, 0x00505050, 0x00eb0000, 0x00eb0000, 0x00656565, 0x00626262, 0x00eb0000, 0x00626262, 0x00eb0000, 0x00636363, 0x009b9b9b, 0x00000000, 0x00505050, 0x00696969, 0x00505050, 0x005f5f5f, 0x00959595, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00000000, 0x00eb0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
	0x00a5a5a5, 0x00a5a5a5, 0x00b4b4b4, 0x00b4b4b4, 0x00a5a5a5, 0x00eb0000, 0x00000000, 0x009b9b9b, 0x00a5a5a5, 0x00a5a5a5, 0x00eb0000, 0x008f8f8f, 0x008e8e8e, 0x00979797, 0x00eb0000, 0x00979797, 0x00eb0000, 0x00eb0000, 0x009b9b9b, 0x00000000, 0x009f9f9f, 0x00a5a5a5, 0x009f9f9f, 0x00a8a8a8, 0x00eb0000, 0x009b9b9b, 0x009b9b9b, 0x009b9b9b, 0x00a5a5a5, 0x00a5a5a5, 0x00eb0000, 0x009f9f9f, 0x00a5a5a5, 0x00a5a5a5, 0x00b4b4b4, 0x00eb0000, 0x00a5a5a5, 0x00a5a5a5, 0x00eb0000, 0x009b9b9b, 0x00a5a5a5, 0x00a5a5a5, 0x00969696, 0x00eb0000, 0x008e8e8e, 0x00979797, 0x00eb0000, 0x00979797, 0x00979797, 0x00eb0000, 0x009b9b9b, 0x00eb0000, 0x009f9f9f, 0x00eb0000, 0x009f9f9f, 0x00eb0000, 0x00a8a8a8, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00a5a5a5, 0x00a5a5a5, 0x009b9b9b, 0x009f9f9f, 0x00a4a4a4, 0x00838383, 0x00a5a5a5, 0x00828282, 0x00838383, 0x00eb0000, 0x00000000, 0x00505050, 0x00656565, 0x009b9b9b, 0x00eb0000, 0x00858585, 0x00727272, 0x00767676, 0x00eb0000, 0x00949494, 0x00eb0000, 0x00858585, 0x00eb0000, 0x00000000, 0x00505050, 0x00828282, 0x00a5a5a5, 0x00828282, 0x00eb0000, 0x00a5a5a5, 0x00a5a5a5, 0x00828282, 0x009f9f9f, 0x007b7b7b, 0x00eb0000, 0x00999999, 0x00a4a4a4, 0x00838383, 0x00a5a5a5, 0x00eb0000, 0x00838383, 0x00a5a5a5, 0x00eb0000, 0x00505050, 0x00656565, 0x009b9b9b, 0x008d8d8d, 0x00eb0000, 0x00727272, 0x00767676, 0x00eb0000, 0x00949494, 0x00727272, 0x00eb0000, 0x00919191, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00a5a5a5, 0x00eb0000, 0x00828282, 0x00eb0000, 0x00a5a5a5, 0x00eb0000, 0x009f9f9f, 0x007b7b7b, 0x00777777, 0x00999999, 0x00838383, 0x00838383, 0x00828282, 0x00828282, 0x00a5a5a5, 0x00eb0000, 0x00000000, 0x00505050, 0x00686868, 0x007b7b7b, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00828282, 0x00eb0000, 0x006b6b6b, 0x00979797, 0x00eb0000, 0x00505050, 0x00696969, 0x00828282, 0x00828282, 0x00eb0000, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00828282, 0x00eb0000, 0x00a5a5a5, 0x00b4b4b4, 0x00eb0000, 0x00505050, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x007b7b7b, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x007b7b7b, 0x00eb0000, 0x00979797, 0x00000000, 0x00505050, 0x00eb0000, 0x00828282, 0x00eb0000, 0x00eb0000, 0x00eb0000, 0x00828282, 0x00eb0000, 0x00828282, 0x00828282, 0x00989898, 0x00a5a5a5, 0x00858585, 0x00838383, 0x00828282, 0x00828282, 0x00a5a5a5, 0x00a4a4a4, 0x00000000, 0x00686868, 0x00818181, 0x00747474, 0x00696969, 0x009c9c9c, 0x00818181, 0x00818181, 0x00818181, 0x00818181, 0x00818181, 0x00898989, 0x008a8a8a, 0x00000000, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00969696, 0x00969696, 0x00858585, 0x00838383, 0x00828282, 0x00828282, 0x00a5a5a5, 0x00a4a4a4, 0x00000000, 0x00686868, 0x00818181, 0x00747474, 0x00696969, 0x009c9c9c, 0x00818181, 0x00818181, 0x00818181, 0x00818181, 0x00818181, 0x00898989, 0x008a8a8a, 0x00000000, 0x00696969, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00969696, 0x00969696, 0x00848484, 0x00818181, 0x00818181, 0x00818181, 0x00a4a4a4, 0x00b2b2b2, 0x00000000, 0x00676767, 0x00686868, 0x00737373, 0x00878787, 0x00969696, 0x007f7f7f, 0x00808080, 0x007f7f7f, 0x007f7f7f, 0x00808080, 0x00888888, 0x00969696, 0x00000000, 0x00696969, 0x006a6a6a, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00969696, 0x00a2a2a2, 0x00848484, 0x00818181, 0x00818181, 0x00818181, 0x00a4a4a4, 0x00b2b2b2, 0x00000000, 0x00676767, 0x00686868, 0x00737373, 0x00878787, 0x00969696, 0x007f7f7f, 0x00808080, 0x007f7f7f, 0x007f7f7f, 0x00808080, 0x00888888, 0x00969696, 0x00000000, 0x00696969, 0x006a6a6a, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00828282, 0x00969696, 0x00a2a2a2, 0x00848484, 0x00808080, 0x00696969, 0x00808080, 0x00686868, 0x00a0a0a0, 0x00000000, 0x00656565, 0x00646464, 0x00717171, 0x00565656, 0x00a0a0a0, 0x00646464, 0x00666666, 0x00646464, 0x007d7d7d, 0x007a7a7a, 0x00575757, 0x008b8b8b, 0x00000000, 0x004f4f4f, 0x00696969, 0x00696969, 0x00828282, 0x006a6a6a, 0x00696969, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x00606060, 0x00989898, 0x00848484, 0x00808080, 0x00696969, 0x00808080, 0x00686868, 0x00a0a0a0, 0x00000000, 0x00656565, 0x00646464, 0x00717171, 0x00565656, 0x00a0a0a0, 0x00646464, 0x00666666, 0x00646464, 0x007d7d7d, 0x007a7a7a, 0x00575757, 0x008b8b8b, 0x00000000, 0x004f4f4f, 0x00696969, 0x00696969, 0x00828282, 0x006a6a6a, 0x00696969, 0x00828282, 0x00828282, 0x00696969, 0x00828282, 0x00606060, 0x00989898, 0x006a6a6a, 0x004e4e4e, 0x00686868, 0x004d4d4d, 0x00656565, 0x009e9e9e, 0x00000000, 0x004b4b4b, 0x00626262, 0x00474747, 0x005a5a5a, 0x00959595, 0x00636363, 0x00626262, 0x004c4c4c, 0x00646464, 0x005c5c5c, 0x00585858, 0x00969696, 0x00000000, 0x00676767, 0x00686868, 0x00505050, 0x00696969, 0x00696969, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x00656565, 0x009f9f9f, 0x006a6a6a, 0x004e4e4e, 0x00686868, 0x004d4d4d, 0x00656565, 0x009e9e9e, 0x00000000, 0x004b4b4b, 0x00626262, 0x00474747, 0x005a5a5a, 0x00959595, 0x00636363, 0x00626262, 0x004c4c4c, 0x00646464, 0x005c5c5c, 0x00585858, 0x00969696, 0x00000000, 0x00676767, 0x00686868, 0x00505050, 0x00696969, 0x00696969, 0x00696969, 0x00696969, 0x00505050, 0x00696969, 0x00505050, 0x00656565, 0x009f9f9f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 

win: .word

	0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00701600, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00701600, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00701600, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00701600, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x008a3700, 0x00ad5100, 0x00000000, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00701600, 0x00000000, 0x00f44336, 0x00000000, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00000000, 0x00f44336, 0x00f44336, 0x00f57f17, 0x00000000, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00000000, 0x00f44336, 0x00f57f17, 0x00f57f17, 0x00000000, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 
	0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00000000, 0x00f44336, 0x00f57f17, 0x00f57f17, 0x00f57f17, 0x00ffff00, 0x00000000, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x005c0600, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00000000, 0x00f57f17, 0x00f57f17, 0x00f57f17, 0x00ffff00, 0x00ffff00, 0x00000000, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x005c0600, 0x005c0600, 0x005c0600, 0x00701600, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00f57f17, 0x00f57f17, 0x00f57f17, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x0076ff03, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00000000, 0x00f44336, 0x00f44336, 0x00f44336, 0x00f44336, 0x00f57f17, 0x00f57f17, 0x00000000, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00000000, 0x0076ff03, 0x0076ff03, 0x0018ffff, 0x0018ffff, 0x0018ffff, 0x009c27b0, 0x00000000, 0x008a3700, 0x00701600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00000000, 0x00f44336, 0x00f44336, 0x00f57f17, 0x00f57f17, 0x00f57f17, 0x00000000, 0x00ffff00, 0x00ffff00, 0x0076ff03, 0x00000000, 0x0076ff03, 0x0018ffff, 0x0018ffff, 0x0018ffff, 0x009c27b0, 0x00000000, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00000000, 0x00f57f17, 0x00f57f17, 0x00f57f17, 0x00ffff00, 0x00000000, 0x00ffff00, 0x0076ff03, 0x0076ff03, 0x00000000, 0x0018ffff, 0x0018ffff, 0x0018ffff, 0x009c27b0, 0x00000000, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00000000, 0x00f57f17, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x0076ff03, 0x0076ff03, 0x0076ff03, 0x0018ffff, 0x0018ffff, 0x0018ffff, 0x009c27b0, 0x00000000, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00000000, 0x00ffff00, 0x00ffff00, 0x0076ff03, 0x0076ff03, 0x0076ff03, 0x0018ffff, 0x0018ffff, 0x0018ffff, 0x009c27b0, 0x00000000, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 
	0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00ffff00, 0x0076ff03, 0x0076ff03, 0x0076ff03, 0x0018ffff, 0x0018ffff, 0x0018ffff, 0x009c27b0, 0x009c27b0, 0x00000000, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00000000, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00000000, 0x00ffff00, 0x0076ff03, 0x0076ff03, 0x0076ff03, 0x0018ffff, 0x0018ffff, 0x0018ffff, 0x009c27b0, 0x009c27b0, 0x009c27b0, 0x00f06292, 0x00000000, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00000000, 0x0076ff03, 0x0076ff03, 0x0076ff03, 0x0018ffff, 0x00000000, 0x00000000, 0x00000000, 0x009c27b0, 0x009c27b0, 0x00f06292, 0x00f06292, 0x00000000, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00000000, 0x0076ff03, 0x0076ff03, 0x0076ff03, 0x00000000, 0x00000000, 0x005c0600, 0x00701600, 0x008a3700, 0x00000000, 0x00000000, 0x00f06292, 0x00f06292, 0x00ff4081, 0x00000000, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00000000, 0x0076ff03, 0x0076ff03, 0x00000000, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00000000, 0x00ff4081, 0x00ff4081, 0x00000000, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00000000, 0x00000000, 0x00000000, 0x005c0600, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00000000, 0x00000000, 0x00000000, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 
	0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x005c0600, 0x005c0600, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00380401, 0x00380401, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00140100, 0x00240200, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x00240200, 0x00240200, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00bd9560, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00140100, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00f0d6af, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00bd9560, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00380401, 0x00240200, 0x00140100, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00701600, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00f0d6af, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00bd9560, 0x008a3700, 0x00701600, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00240200, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00e6c793, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 
	0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00ad5100, 0x008a3700, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00f0d6af, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00701600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00380401, 0x005c0600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x005c0600, 0x005c0600, 0x005c0600, 0x00701600, 0x00f0d6af, 0x00e6c793, 0x00caaa7f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00caaa7f, 0x00000000, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00000000, 0x00caaa7f, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00380401, 0x005c0600, 0x005c0600, 0x005c0600, 0x005c0600, 0x00701600, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00bd9560, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00bd9560, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 
	0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00000000, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00e6c793, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00000000, 0x00000000, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00f0d6af, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00f0d6af, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00caaa7f, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00000000, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00000000, 0x00000000, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00240200, 0x00140100, 0x00000000, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00e6c793, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 
	0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00ad5100, 0x0098772c, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x0098772c, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x0098772c, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x005c0600, 0x00701600, 0x0098772c, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x0098772c, 0x0098772c, 0x0098772c, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00380401, 0x005c0600, 0x0098772c, 0x00f0d6af, 0x00e6c793, 0x00e6c793, 0x0098772c, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x005c0600, 0x005c0600, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00bd9560, 0x0098772c, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00380401, 0x00380401, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x0098772c, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00380401, 0x00380401, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x00240200, 0x00240200, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x0098772c, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x00240200, 0x00240200, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 
	0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x00701600, 0x00701600, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00701600, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x008a3700, 0x00701600, 0x00701600, 0x005c0600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00000000, 0x00000000, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00701600, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00bd9560, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00701600, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00140100, 0x00140100, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00ffcc00, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x00db8b00, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00bd9560, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00e6c793, 0x00f0d6af, 0x00bd9560, 0x00ad5100, 0x00db8b00, 0x00db8b00, 0x00ffcc00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00ad5100, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x00bd9560, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x00701600, 0x008a3700, 0x00ad5100, 0x00db8b00, 0x00ffcc00, 0x00db8b00, 0x00ad5100, 0x008a3700, 0x00701600, 0x005c0600, 0x00380401, 0x00240200, 0x00380401, 0x005c0600, 0x00701600, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 0x008a3700, 
	
lost: .word


	0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 
	0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x00646766, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x00404242, 0x00333535, 0x00646766, 0x00505252, 0x00646766, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x00c25353, 0x00c25353, 0x00c25353, 0x00904545, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x0038404e, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x00c25353, 0x00c25353, 0x00c25353, 0x00c25353, 0x00c25353, 0x00904545, 0x004b659d, 0x004b659d, 0x004b659d, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x002b3240, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x004b659d, 0x004b659d, 0x004b659d, 0x00c25353, 0x00c25353, 0x00c5ccdb, 0x00c25353, 0x00c5ccdb, 0x00c25353, 0x00c25353, 0x00904545, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x0038404e, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x004b659d, 0x004b659d, 0x004b659d, 0x00c25353, 0x00c25353, 0x00c25353, 0x00c5ccdb, 0x00c25353, 0x00c25353, 0x00c25353, 0x00904545, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x00303846, 0x00646766, 
	0x00404242, 0x00404242, 0x00333535, 0x004b659d, 0x004b659d, 0x004b659d, 0x00c25353, 0x00c25353, 0x00c5ccdb, 0x00c25353, 0x00c5ccdb, 0x00c25353, 0x00c25353, 0x00904545, 0x004b659d, 0x004b659d, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x00433d58, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x00262e3c, 0x00333535, 0x00646766, 0x00505252, 0x00646766, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x00c25353, 0x00c25353, 0x00c25353, 0x00c25353, 0x00c25353, 0x00904545, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x0038404e, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x00c25353, 0x00c25353, 0x00c25353, 0x00904545, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x0038404e, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x00303846, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x00303846, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x0038404e, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x002b3240, 0x00404242, 0x00646766, 0x00505252, 0x00646766, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x0038404e, 0x00505252, 
	0x00505252, 0x00646766, 0x00646766, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x00303846, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00c5ccdb, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00000000, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00000000, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x00303846, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x00303846, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00a3a3a3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x00f1c40f, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x002b3240, 0x00333535, 0x00646766, 0x00505252, 0x00646766, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x00000000, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00c5ccdb, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00000000, 0x00c5ccdb, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00a3a3a3, 0x009fa6b3, 0x009fa6b3, 0x00c5ccdb, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x00f1c40f, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x0038404e, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00a3a3a3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x007a7a7a, 0x00000000, 0x00000000, 0x00f1c40f, 0x00000000, 0x00000000, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x002b3240, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x00000000, 0x00979797, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00979797, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00c5ccdb, 0x009fa6b3, 0x009fa6b3, 0x00c5ccdb, 0x00a3a3a3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x00f1c40f, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x0038404e, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00979797, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00979797, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00a3a3a3, 0x00c5ccdb, 0x00c5ccdb, 0x00800000, 0x00800000, 0x007a7a7a, 0x007a7a7a, 0x00f1c40f, 0x007a7a7a, 0x007a7a7a, 0x00800000, 0x00800000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x00303846, 0x00646766, 
	0x00404242, 0x00404242, 0x00333535, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00979797, 0x00979797, 0x00979797, 0x00000000, 0x00979797, 0x00979797, 0x00979797, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x00800000, 0x007a7a7a, 0x00800000, 0x00800000, 0x007a7a7a, 0x00f1c40f, 0x007a7a7a, 0x00800000, 0x00800000, 0x007a7a7a, 0x00a3a3a3, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x00262e3c, 0x00333535, 0x00646766, 0x00505252, 0x00646766, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x00979797, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00800000, 0x00800000, 0x00800000, 0x00800000, 0x007a7a7a, 0x00800000, 0x00800000, 0x00800000, 0x00800000, 0x00800000, 0x00800000, 0x00800000, 0x007a7a7a, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x0038404e, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00800000, 0x007a7a7a, 0x00a3a3a3, 0x00a3a3a3, 0x00a3a3a3, 0x007a7a7a, 0x00800000, 0x00800000, 0x00800000, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x0038404e, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00000000, 0x006b6b6b, 0x006b6b6b, 0x006b6b6b, 0x006b6b6b, 0x006b6b6b, 0x00000000, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00ffffff, 0x00c5ccdb, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x00800000, 0x00c5ccdb, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x00303846, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x006b6b6b, 0x006b6b6b, 0x00000000, 0x006b6b6b, 0x006b6b6b, 0x006b6b6b, 0x00000000, 0x006b6b6b, 0x006b6b6b, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00ffffff, 0x00c5ccdb, 0x00c5ccdb, 0x00800000, 0x00800000, 0x00800000, 0x00800000, 0x00800000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x00303846, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00000000, 0x006b6b6b, 0x006b6b6b, 0x00000000, 0x006b6b6b, 0x006b6b6b, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x00000000, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x0038404e, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x00c5ccdb, 0x00000000, 0x00c5ccdb, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x007a7a7a, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x002b3240, 0x00404242, 0x00646766, 0x00505252, 0x00646766, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x0038404e, 0x00505252, 
	0x00505252, 0x00646766, 0x00646766, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x00303846, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x00303846, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x00303846, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x009fa6b3, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x002b3240, 0x00333535, 0x00646766, 0x00505252, 0x00646766, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x0038404e, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x004b659d, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x00c5ccdb, 0x004b659d, 0x002b3240, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x004b659d, 0x002d2e35, 0x0038404e, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x0038404e, 0x00303846, 0x0038404e, 0x0038404e, 0x0038404e, 0x0038404e, 0x00303846, 0x0038404e, 0x0038404e, 0x00303846, 0x0038404e, 0x0038404e, 0x00303846, 0x00303846, 0x00303846, 0x002b3240, 0x002b3240, 0x0038404e, 0x00303846, 0x0038404e, 0x0038404e, 0x0038404e, 0x0038404e, 0x00303846, 0x0038404e, 0x0038404e, 0x00303846, 0x0038404e, 0x0038404e, 0x00303846, 0x00303846, 0x00303846, 0x002b3240, 0x002b3240, 0x0038404e, 0x00303846, 0x0038404e, 0x0038404e, 0x0038404e, 0x0038404e, 0x00303846, 0x0038404e, 0x0038404e, 0x00303846, 0x0038404e, 0x0038404e, 0x00303846, 0x00303846, 0x00303846, 0x002b3240, 0x002b3240, 0x0038404e, 0x00303846, 0x0038404e, 0x0038404e, 0x0038404e, 0x0038404e, 0x00505252, 0x00646766, 
	0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 
	0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x00404242, 0x00404242, 0x00505252, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00505252, 0x00404242, 0x007d807f, 0x00646766, 0x00404242, 0x00404242, 0x00333535, 0x00404242, 0x00505252, 0x00404242, 0x007d807f, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00505252, 0x00404242, 0x007d807f, 0x00646766, 0x00404242, 0x00404242, 0x00333535, 0x00404242, 0x00505252, 0x00404242, 0x007d807f, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00505252, 0x00404242, 0x007d807f, 0x00646766, 0x00404242, 0x00404242, 0x00333535, 0x00404242, 0x00505252, 0x00404242, 0x007d807f, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00404242, 0x00505252, 0x00404242, 0x007d807f, 0x00646766, 0x00404242, 0x00404242, 0x00333535, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x007d807f, 0x007d807f, 0x00646766, 0x00505252, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00333535, 0x00333535, 0x00505252, 0x00646766, 0x00505252, 0x00404242, 0x00404242, 0x00404242, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00404242, 0x00505252, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x007d807f, 0x007d807f, 0x00505252, 0x00505252, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00505252, 0x00505252, 0x00505252, 0x00404242, 0x00404242, 0x00646766, 0x00505252, 0x00646766, 0x00646766, 0x00646766, 0x00646766, 0x00505252, 0x00646766, 

.text
.globl main

main:   
    j draw_game_start
    j exit          # otherwise, exit

door:
    # Retrieve the input arguments from the stack
    lw $s0, dx1      # Load the value of x from the top of the stack
    lw $s1, dy1      # Load the value of y after x on the stack
    
    # Start an infinite loop
    health2loop:
        # Check if x has reached 62
        bge $s0, 27, end_loop
        
        # Draw a red pixel at (x, y)
        lw $a2, RED       # load the value of the red color
        move $a0, $s0     # move x coordinate to $a0
        move $a1, $s1     # move y coordinate to $a1
        jal draw_pixel    # call the draw_pixel function
        
        # Increment x and repeat the loop
        addi $s0, $s0, 1  # add 1 to x coordinate
        j health2loop
        
    end_loop:
        j coin
        
# Loop until user presses enter
loop:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	lw $t0, 0xffff0004	# get keypress from keyboard input
	li $t7, 5323234            # load value to be stored into register $t0
	sw $t7, 0xffff0004   # store value at memory address 0xffff0004
	# Check which key was pressedsssssssssssssssssssssssssssssssss
	beq $t0, 0xA, exit	# exit loop if enter was pressed
	
	# Check if key has been pressed already
	lw $t1, key_pressed
	beq $t1, 1, loop	# if key has been pressed, loop again
	lw $t5, gravity    # load the value of gravity into register $t0
	li $t6, 0          # load the value 1 into register $t1
	jal handle_gravity  # if $t0 (gravity) equals $t1 (1), jump to handle_gravity\
	# Set key_pressed flag to 1
	sw $t1, key_pressed
	# Load value of position into register $t0
        lw $t2, position
	# If $t0 is not equal to 1, jump to reset_character_gun
        lw $a2, x       # load the value of the red color
	bgt $a2, 63, adapter
	beq $t0, 0x77, move_up	# 'w' pressed, move up
	beq $t0, 0x73, move_down	# 's' pressed, move down
	beq $t0, 0x64, move_right	# 'd' pressed, move right
	beq $t0, 0x61, move_left	# 'a' pressed, move leftww
	j drawing_function
	# Set $t0 to space key
	addi $t0, $zero, 0x20
	
	j loop			# otherwise, loop again
	
handle_gravity:
	jr $ra
	
adapter:
	lw $a1, y 
	blt $a1, 20, function_level1to2
	j loop

function_level1to2:
lw $t2, level        # load the value of the level variable into $t2
addi $t2, $t2, 1    # increment the value of $t2 by 1
sw $t2, level        # store the incremented value back into the level variable

# check if the new value of level is 4
beq $t2, 4, draw_win # if so, branch to draw_gamewinfunction_level1to2
# check if the new value of level is 2 or greater
bge $t2, 3, draw_level3   # if so, branch to draw_level3
ble $t2, 2, draw_level2   # if the original value of level was 1 or less, branch to draw_level2
j loop                   # otherwise, jump to the loop label

        
health_bar:
    # Retrieve the input arguments from the stack
    # Retrieve the input arguments from the stack
lw $s0, hs       # Load the value of x from the top of the stack
lw $s1, hy1      # Load the value of y after x on the stack
lw $t0, hx1      # Load the value of x after y on the stack

# Calculate the remaining distance to the right edge of the screen
li $t1, 64       # Load the maximum x coordinate
sub $t1, $t1, $t0 # Subtract the current x coordinate from the maximum x coordinate

# Start a loop to draw the health bar
healthloop:
    # Check if x has reached the right edge of the screen
    bge $s0, $t1, end_loop4
        
    # Draw a green pixel at (x, y)
    lw $a2, HEALTH_GREEN      # load the value of the green color
    move $a0, $s0     # move x coordinate to $a0
    move $a1, $s1     # move y coordinate to $a1
    jal draw_pixel    # call the draw_pixel function
        
    # Increment x and repeat the loop
    addi $s0, $s0, 1  # add 1 to x coordinate
    j healthloop
        
end_loop4:
    # Load the level value from memory into $t0
    lw $t0, level

    # Compare $t0 to the desired levels and jump accordingly
    beq $t0, 1, gun   # if level == 1, jump to gun
    beq $t0, 2, coin # if level == m2, jump to coin
    beq $t0, 3, slow_down # if level == 3, jump to slow_down

    # If none of the above conditions are met, continue execution at the end of the function
    j loop

move_up:
    li $v0, 4           # syscall to print string
    la $a0, message_down  # load message string into $a0
    syscall
    jal reset_character # reset the character's position
    lw $t0, x           # Load the current value of x into $t0
    lw $t1, y           # Load the current value of y into $t1
    bgt $t1, 7, moveup
    j drawing_function  # Redraw the character on the screen
    j exit_moving       # If y is greater than or equal to 49, jump to exit_moving label
    
moveup:
# Set initial position of the character
lw $t0, x  # x coordinate
lw $t1, y  # y coordinate

# Jump up and come back down 5 times
li $t2, 5   # Number of jumps to make
li $t3, 0   # Loop counter
loopj:
    # Jump up
    sw $t0, x           # Store the new value of x
    sw $t1, y           # Store the new value of y
    j drawing_jump  # Redraw the character on the screen
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 200    # 200 ms (0.2 seconds)
    syscall

    # Come back down
    addi $t1, $t1, 7   # Decrease the value of y by 7
    sw $t0, x           # Store the new value of x
    sw $t1, y           # Store the new value of y
    j drawing_jump  # Redraw the character on the screen
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 200    # 200 ms (0.2 seconds)
    syscall

    # Increment loop counter
    addi $t3, $t3, 1
    blt $t3, $t2, loopj  # Repeat loop if loop counter < number of jumps
j exit_moving       # exit move function



move_down:
    li $v0, 4           # syscall to print string
    la $a0, message_down  # load message string into $a0
    syscall
    jal reset_character # reset the character's position
    lw $t0, x           # Load the current value of x into $t0
    lw $t1, y           # Load the current value of y into $t1
    bgt $t1, 7, movedown
    j drawing_function  # Redraw the character on the screen
    j exit_moving       # If y is greater than or equal to 49, jump to exit_moving label
    
movedown:
# Set initial position of the character
lw $t0, x  # x coordinate
lw $t1, y  # y coordinate

# Jump up and come back down 5 times
li $t2, 5   # Number of jumps to make
li $t3, 0   # Loop counter
loopdwon:
    # Jump up
    sw $t0, x           # Store the new value of x
    sw $t1, y           # Store the new value of y
    j drawing_jump  # Redraw the character on the screen
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 200    # 200 ms (0.2 seconds)
    syscall

    # Come back down
    addi $t1, $t1, 7   # Decrease the value of y by 7
    sw $t0, x           # Store the new value of x
    sw $t1, y           # Store the new value of y
    j drawing_jumpright  # Redraw the character on the screen
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 200    # 200 ms (0.2 seconds)
    syscall

    # Increment loop counter
    addi $t3, $t3, 1
    blt $t3, $t2, loopdwon  # Repeat loop if loop counter < number of jumps
j exit_moving       # exit move function

	
# Move right
move_right:
	li $v0, 4		# syscall to print string
	la $a0, message_right	# load message string into $a0
	syscall
	jal reset_character
	lw $t0, x      # Load the current value of x into $t0
    	lw $t1, y      # Load the current value of y into $t1
    	
    	addi $t0, $t0, 1     # Decrease the value of y by 1
    	
    	sw $t0, x             # Store the new value of x
	sw $t1, y             # Store the new value of y
    	j drawing_function
    		addi $v0, $zero, 32     # syscall sleep
	addi $a0, $zero, 1000   # 1000 ms (1 second)
	syscall
	j exit_moving		# exit move function

move_left:
    li $v0, 4           # syscall to print string
    la $a0, message_down  # load message string into $a0
    syscall
    jal reset_character # reset the character's position
    lw $t0, x           # Load the current value of x into $t0
    lw $t1, y           # Load the current value of y into $t1
    bgt $t0, 4, moveleft
    j drawing_function  # Redraw the character on the screen
    j exit_moving       # If y is greater than or equal to 49, jump to exit_moving label

moveleft:
    addi $t0, $t0, -1    # Increase the value of y by 1
    sw $t0, x           # Store the new value of x
    sw $t1, y           # Store the new value of y
    j drawing_function  # Redraw the character on the screen
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 200    # 200 ms (0.2 seconds)
    syscall
    j exit_moving       # exit move function
  
enemy1:

# Retrieve the input arguments from the stack
lw $s0, ex1      # Load the value of x from the top of the stack
lw $s1, ey1      # Load the value of y after x on the stack

# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 3
addi $s1, $s1, 1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 5
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1

addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_GREEN      # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_GREEN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_GREEN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

shoot1:
# Retrieve the input arguments from the stack
lw $s0, ex1      # Load the value of x from the top of the stack
lw $s1, ey1      # Load the value of y after x on the stack
li $a2, 0xff0000 # Load the value of red color

# Retrieve the input arguments from the stack
lw $s0, ex1      # Load the value of x from the top of the stack
lw $s1, ey1      # Load the value of y after x on the stack
lw $s2, level    # Load the value of level from the stack

# Loop to draw pixels one by one
loopshoot1:
    move $a0, $s0       # move x coordinate to $a0
    move $a1, $s1       # move y coordinate to $a1
    jal draw_pixel      # call the draw_pixel function
    addi $s0, $s0, 1    # increment x coordinate
    beq $s0, 63, enemy2   # exit loop when x coordinate reaches 63

    # Set the delay time based on the level
    beq $s2, 1, level11   # if level == 1, go to level1
    beq $s2, 2, level21  # if level == 2, go to level2
    beq $s2, 3, level31  # if level == 3, go to level3
    j exit               # otherwise, exit program

    # Delay time for level 1: 200ms (0.2s)
    level11:
        li $a0, 200         # set delay time to 200ms
        j continue          # jump to continue

    # Delay time for level 2: 100ms (0.1s)
    level21:
        li $a0, 100         # set delay time to 100ms
        j continue          # jump to continue

    # Delay time for level 3: 50ms (0.05s)
    level31:
        li $a0, 50          # set delay time to 50ms
        j continue          # jump to continue

    # Continue program execution
    continue:
        li $v0, 32          # syscall code for sleep function
        syscall             # pause program for specified delay time
        j loopshoot1        # jump back to loop start

gun:

# Retrieve the input arguments from the stack
lw $s1, gx1      # Load the value of x from the top of the stack
lw $s0, gy1      # Load the value of y after x on the stack

# draw the left half of the heart
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1

addi $s1, $s1, 1
addi $s0, $s0, 2
# draw the left half of the heart
lw $a2, PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BLACK       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1

addi $s1, $s1, 1
addi $s0, $s0, 1
# draw the left half of the heart
lw $a2, BLACK       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1

j loop

enemy2:

# Retrieve the input arguments from the stack
lw $s0, ex2      # Load the value of x from the top of the stack
lw $s1, ey2      # Load the value of y after x on the stack

# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 3
addi $s1, $s1, 1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 5
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 1

addi $s1, $s1, 1

addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

j enemy3

enemy3:

# Retrieve the input arguments from the stack
lw $s0, ex3      # Load the value of x from the top of the stack
lw $s1, ey3      # Load the value of y after x on the stack

# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 3
addi $s1, $s1, 1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 5
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1

addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_GREEN      # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_GREEN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_GREEN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

j enemy4

enemy4:

# Retrieve the input arguments from the stack
lw $s0, ex4      # Load the value of x from the top of the stack
lw $s1, ey4      # Load the value of y after x on the stack

# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 3
addi $s1, $s1, 1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, BROWN       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 5
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 1

addi $s1, $s1, 1

addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
# draw the left half of the heart
lw $a2, LIGHT_YELLOW       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
# draw the left half of the heart
addi $s0, $s0, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
lw $a2, LIGHT_PURPLE       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

j coin

slow_down:

# Retrieve the input arguments from the stack
lw $s0, dex1      # Load the value of x from the top of the stack
lw $s1, dey1      # Load the value of y after x on the stack

# draw the left half of the heart
lw $a2, RED       # load the value of the red color

move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 4

addi $s1, $s1, 1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1

move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1

move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1

move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s1, $s1, 1

addi $s0, $s0, 5
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1

addi $s0, $s0, 5
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1

addi $s0, $s0, 4
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
j loop

coin:

# Retrieve the input arguments from the stack
lw $s0, cx1      # Load the value of x from the top of the stack
lw $s1, cy1      # Load the value of y after x on the stack

# draw the left half of the heart
lw $a2, YELLOW       # load the value of the red color

move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 4

addi $s1, $s1, 1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1

move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1

move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1

move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s1, $s1, 1

addi $s0, $s0, 5
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1

addi $s0, $s0, 5
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function

addi $s1, $s1, 1

addi $s0, $s0, 4
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
j loop


draw_live1:

# Retrieve the input arguments from the stack
lw $s0, lx1      # Load the value of x from the top of the stack
lw $s1, ly1      # Load the value of y after x on the stack

# draw the left half of the heart
addi $s1, $s1, -1       # subtract 1 from y coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -2       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 4       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 4       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinat
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 3       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 1       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
j draw_live2

# Loop over the three live cells
draw_lives:
j draw_live1
    
draw_live2:

# Retrieve the input arguments from the stack
lw $s0, lx2      # Load the value of x from the top of the stack
lw $s1, ly2      # Load the value of y after x on the stack

# draw the left half of the heart
addi $s1, $s1, -1       # subtract 1 from y coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -2       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 4       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 4       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinat
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 3       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 1       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
j draw_live3
    
draw_live3:

# Retrieve the input arguments from the stack
lw $s0, lx3      # Load the value of x from the top of the stack
lw $s1, ly3      # Load the value of y after x on the stack

# draw the left half of the heart
addi $s1, $s1, -1       # subtract 1 from y coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -2       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 4       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 4       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinat
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 3       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, -1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
addi $s0, $s0, 1       # subtract 1 from x coordinate
addi $s1, $s1, 1       # subtract 1 from x coordinate
lw $a2, RED       # load the value of the red color
move $a0, $s0           # move x coordinate to $a0
move $a1, $s1           # move y coordinate to $a1
jal draw_pixel          # call the draw_pixel function
j health_bar

exit_moving:
# Sleep for 66 ms so frame rate is about 15
	addi $v0, $zero, 32	# syscall sleep
	addi $a0, $zero, 50	# 66 ms
	syscall
	# Set $t0 to space key
	addi $t0, $zero, 0x20
	sw $zero, key_pressed	# reset key_pressed flag to 0
	
	    lw $t0, level
	j loop			# loop back to beginning
	
drawing_function:
    lw $t0, x      # Set x to 10
    lw $t1, y      # Set y to 20
    
    # Push the values of x and y onto the stack
    addi $sp, $sp, -8   # Decrement stack pointer by 8 bytes
    sw $t0, 0($sp)      # Store the value of x at the top of the stack
    sw $t1, 4($sp)      # Store the value of y after x on the stack
    
    # Call the function with the values of x and y as arguments
    lw $t0, position    # Load the value of position into $t0
    beq $t0, $zero, draw_character_gun   # If position == 0, branch to character_gun
    j draw_character     # Otherwise, jump to draw_character 
    j exit_moving # exit move function


drawing_jump:
    lw $t0, x      # Set x to 10
    lw $t1, y      # Set y to 20
    
    # Push the values of x and y onto the stack
    addi $sp, $sp, -8   # Decrement stack pointer by 8 bytes
    sw $t0, 0($sp)      # Store the value of x at the top of the stack
    sw $t1, 4($sp)      # Store the value of y after x on the stack
    
    # Call the function with the values of x and y as arguments
    lw $t0, position    # Load the value of position into $t0
    beq $t0, $zero, draw_character_gun   # If position == 0, branch to character_gun
    jal draw_character_jump     # Otherwise, jump to draw_character 
    j exit_moving # exit move function
    
# Define the exit label
exit:
    li $v0, 10      # Set system call 10 (exit)
    syscall         # Terminate the program

draw_pixel:
    addi $sp, $sp, -8    # allocate space on the stack for the return address and saved $gp value
    sw $ra, 4($sp)       # save the return address on the stack
    sw $gp, 0($sp)       # save the $gp value on the stack

    # calculate the memory address of the pixel
    li $t0, 256         # width of bitmap
    mul $a0, $a0, 4     # multiply x coordinate by 4 (each pixel is 4 bytes)
    mul $a1, $a1, $t0   # multiply y coordinate by width
    add $a0, $a0, $a1   # add the x and y offsets
    add $a0, $gp, $a0   # add the base address of the bitmap

    sw $a2, 0($a0)       # store the color value at the calculated memory address

    lw $gp, 0($sp)       # restore the $gp value from the stack
    lw $ra, 4($sp)       # restore the return address from the stack
    addi $sp, $sp, 8     # deallocate space on the stack
    jr $ra 
    
draw_character_jump:
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    	
    sw $t1, position             # Store the new value of x
    lw $s0, 0($sp)      # Load the value of x from the top of the stack
    lw $s1, 4($sp)      # Load the value of y after x on the stack
    
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
    syscall
    jal reset_character
    lw $t9, 0xffff0004	# get keypress from keyboard input
    li $t8, 5323234            # load value to be stored into register $t0
    sw $t8, 0xffff0004   # store value at memory address 0xffff0004
    beq $9, 0x77, move_up	# 'w' pressed, move up
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, -1
    addi $s0, $s0, -1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
    syscall
    jal reset_character
    lw $t9, 0xffff0004	# get keypress from keyboard input
    li $t8, 5323234            # load value to be stored into register $t0
    sw $t8, 0xffff0004   # store value at memory address 0xffff0004
    beq $9, 0x77, move_up	# 'w' pressed, move up
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, -1
    addi $s0, $s0, -1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    
    
addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
    syscall
    
    jal reset_character
    lw $t9, 0xffff0004	# get keypress from keyboard input
    li $t8, 5323234            # load value to be stored into register $t0
    sw $t8, 0xffff0004   # store value at memory address 0xffff0004
    beq $9, 0x77, move_up	# 'w' pressed, move up
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, -1
    addi $s0, $s0, -1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    
 
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
    syscall
    jal reset_character
    lw $t9, 0xffff0004	# get keypress from keyboard input
    li $t8, 5323234            # load value to be stored into register $t0
    sw $t8, 0xffff0004   # store value at memory address 0xffff0004
    beq $9, 0x77, move_up	# 'w' pressed, move up
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, -1
    addi $s0, $s0, -1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel functio
    


addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
    syscall
    jal reset_character
    lw $t9, 0xffff0004	# get keypress from keyboard input
    li $t8, 5323234            # load value to be stored into register $t0
    sw $t8, 0xffff0004   # store value at memory address 0xffff0004
    beq $9, 0x77, move_up	# 'w' pressed, move up
              # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, -1
    addi $s0, $s0, -1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function


    
    j jump2		# exit move function
    
jump2:

    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
    syscall
    jal reset_character
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, 1
    addi $s1, $s1, -1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
    syscall
    jal reset_character
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, -6
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
    syscall
    jal reset_character
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, -6
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    

    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
    syscall
    jal reset_character
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, -6
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function

 
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
    syscall
    jal reset_character
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, -6
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function

 
   
 
 
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
    syscall
    jal reset_character
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, -6
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function


    j exit_moving		# exit move function
    
jump3:
    jal reset_character
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, 2
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    j jump4		# exit move function
  
jump4:
    jal reset_character
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, 7     # Decrease the value of y by 1
    	
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, 1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    j jump5		# exit move function
    
jump5:
    jal reset_character
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, 7     # Decrease the value of y by 1
    	
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, 1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    j jump6		# exit move function
    
jump6:
    jal reset_character
    addi $v0, $zero, 32     # syscall sleep
    addi $a0, $zero, 50    # 200 ms (0.2 seconds)
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, 7     # Decrease the value of y by 1
    	
    sw $t1, position             # Store the new value of x
    lw $s0, x      # Load the value of x from the top of the stack
    lw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, 1
    sw $s0, x      # Load the value of x from the top of the stack
    sw $s1, y      # Load the value of y after x on the stack
    addi $s1, $s1, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    j exit_moving		# exit move function





draw_character:
       # Retrieve the input arguments from the stack
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, -1     # Decrease the value of y by 1
    	
    sw $t1, position             # Store the new value of x
    lw $s0, 0($sp)      # Load the value of x from the top of the stack
    lw $s1, 4($sp)      # Load the value of y after x on the stack
    
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 4
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
        addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    
    addi $s0, $s0, 5
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, DARK_YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    j exit_moving		# exit move function
    
restriction:
# Load values of x and y into registers
lw $t0, x     # Load x into register $t0
lw $t1, y     # Load y into register $t1

# Check if y is greater than 60
bgt $t1, 49, exit_moving  # Jump to function_return if y > 60

# If y is not greater than 60, jump to exit_moving
jr $ra

 
draw_character_gun:
    lw $t1, position      # Load the current value of y into $t1
    	
    addi $t1, $t1, 1     # Decrease the value of y by 1
    	
    sw $t1, position             # Store the new value of x
    # Retrieve the input arguments from the stack
    lw $s0, 0($sp)      # Load the value of x from the top of the stack
    lw $s1, 4($sp)      # Load the value of y after x on the stack
    
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED      # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, RED       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, HEALTH_GREEN       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, YELLOW       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 2
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    # increment the x coordinate by 1
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    addi $s0, $s0, -1
    # call the draw_pixel function to draw a pixel at (332, 32) in red
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    
    addi $s0, $s0, 1
    addi $s1, $s1, 1
    lw $a2, BLACK       # load the value of the red color
    move $a0, $s0           # move x coordinate to $a0
    move $a1, $s1           # move y coordinate to $a1
    jal draw_pixel          # call the draw_pixel function
    j exit_moving		# exit move function

start:
    # set up the bitmap display
    addi $gp, $zero, 0x10008000 # set $gp to the base address of the bitmap display

end:
# end of program
li $v0, 10 # set $v0 to 10 for exit syscall
syscall # terminate the program

draw_game_start:        li $t0, BASE_ADDRESS        # $t0 stores base address
            la $t1,bgwithplane        # $t1 stores address of game_over
            li $t2, 0            # $t2 stores counter
            li $t3, NUM_UNITS        # $t3 stores total units

loop_game_start:        bge $t2, $t3, draw_game_over
            sll $t4, $t2, 2            # calculate offset
            add $t5, $t1, $t4        # $t5 stores address of color for current unit
            lw $t5, 0($t5)            # $t5 stores color of current unit
            add $t4, $t4, $t0        # $t4 stores address of current unit
            sw $t5, 0($t4)            # paint unit black
            addi $t2, $t2, 1        # increment counter
            lw $t7, 0xffff0004           # get keypress from keyboard input
            beq $t7, 0x61, draw_game	# go to draw_game if "a" is pressed
            beq $t7, 0x65, exit     # exit loop if 'e' was pressed
            j loop_game_start
            
draw_game_over:        li $t0, BASE_ADDRESS        # $t0 stores base address
    la $a0, tone
    lw $a1, duration
    li $v0, 33
    syscall
            la $t1, game_over        # $t1 stores address of game_over
            li $t2, 0            # $t2 stores counter
            li $t3, NUM_UNITS        # $t3 stores total units

loop_game_over:        bge $t2, $t3, draw_game2
	    lw $t7, 0xffff0004	# get keypress from keyboard input
	    beq $t7, 0xA, exit	# exit loop if enter was pressed
            sll $t4, $t2, 2            # calculate offset
            add $t5, $t1, $t4        # $t5 stores address of color for current unit
            lw $t5, 0($t5)            # $t5 stores color of current unit
            add $t4, $t4, $t0        # $t4 stores address of current unit
            sw $t5, 0($t4)            # paint unit black
            addi $t2, $t2, 1        # increment counter
            beq $t7, 0x61, draw_game	# go to draw_game if "a" is pressed
            lw $t7, 0xffff0004           # get keypress from keyboard input
            beq $t7, 0x65, exit     # exit loop if 'e' was pressed
            j loop_game_over

draw_game2:        li $t0, BASE_ADDRESS        # $t0 stores base address
    la $a0, tone
    lw $a1, duration
    li $v0, 33
    syscall
            la $t1, startend        # $t1 stores address of game_over
            li $t2, 0            # $t2 stores counter
            li $t3, NUM_UNITS        # $t3 stores total units

loop_game2:        bge $t2, $t3, draw_game
            sll $t4, $t2, 2            # calculate offset
            add $t5, $t1, $t4        # $t5 stores address of color for current unit
            lw $t5, 0($t5)            # $t5 stores color of current unit
            add $t4, $t4, $t0        # $t4 stores address of current unit
            sw $t5, 0($t4)            # paint unit black
            addi $t2, $t2, 1        # increment counter
            lw $t7, 0xffff0004           # get keypress from keyboard input
            beq $t7, 0x61, draw_game	# go to draw_game if "a" is pressed
            beq $t7, 0x65, exit     # exit loop if 'e' was pressed
            j loop_game2
            
reset_char_gun_level1:        

li $t0, BASE_ADDRESS        # $t0 stores base address
la $t1, background        # $t1 stores address of game_over
    # Load values of x and y into registers
lw $t5, x
lw $t6, y

# Compute 64*y + x and store the result in $t7
sll $t6, $t6, 6  # Multiply y by 64 by shifting left by 6 bits
add $t2, $t6, $t5  # Add x to the result

# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 65
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

jr $ra
reset_char_gun_level2:        

li $t0, BASE_ADDRESS        # $t0 stores base address
la $t1, level2        # $t1 stores address of game_over
    # Load values of x and y into registers
lw $t5, x
lw $t6, y

# Compute 64*y + x and store the result in $t7
sll $t6, $t6, 6  # Multiply y by 64 by shifting left by 6 bits
add $t2, $t6, $t5  # Add x to the result

# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 65
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

jr $ra
reset_char_gun_level3:        

li $t0, BASE_ADDRESS        # $t0 stores base address
la $t1, level3        # $t1 stores address of game_over
    # Load values of x and y into registers
lw $t5, x
lw $t6, y

# Compute 64*y + x and store the result in $t7
sll $t6, $t6, 6  # Multiply y by 64 by shifting left by 6 bits
add $t2, $t6, $t5  # Add x to the result

# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 65
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

jr $ra

reset_character:
# Load address of level array based on value of level variable
lw $t0, level
beq $t0, 1, reset_char_level1 # If level == 1, jump to load_background
beq $t0, 3, reset_char_level3     # If level == 2, jump to load_level2
beq $t0, 2, reset_char_level2     # If level == 3, jump to load_level3
jr $ra      

reset_character_gun:
# Load address of level array based on value of level variable
lw $t0, level
beq $t0, 1, reset_char_gun_level1 # If level == 1, jump to load_background
beq $t0, 3, reset_char_gun_level3     # If level == 2, jump to load_level2
beq $t0, 2, reset_char_gun_level2     # If level == 3, jump to load_level3
jr $ra   

reset_char_level3:
li $t0, BASE_ADDRESS        # $t0 stores base address
la $t1, level3        # $t1 stores address of game_over
    # Load values of x and y into registers
lw $t5, x
lw $t6, y

# Compute 64*y + x and store the result in $t7
sll $t6, $t6, 6  # Multiply y by 64 by shifting left by 6 bits
add $t2, $t6, $t5  # Add x to the result

# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 68
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 68
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 65
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

jr $ra

reset_char_level2:
li $t0, BASE_ADDRESS        # $t0 stores base address
la $t1, level2        # $t1 stores address of game_over
    # Load values of x and y into registers
lw $t5, x
lw $t6, y

# Compute 64*y + x and store the result in $t7
sll $t6, $t6, 6  # Multiply y by 64 by shifting left by 6 bits
add $t2, $t6, $t5  # Add x to the result

# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 68
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 68
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 65
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

jr $ra

reset_char_level1:
li $t0, BASE_ADDRESS        # $t0 stores base address
la $t1, background        # $t1 stores address of game_over
    # Load values of x and y into registers
lw $t5, x
lw $t6, y

# Compute 64*y + x and store the result in $t7
sll $t6, $t6, 6  # Multiply y by 64 by shifting left by 6 bits
add $t2, $t6, $t5  # Add x to the result

# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 68
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 68
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 66
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black
addi $t2, $t2, -1
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

addi $t2, $t2, 65
# The result is stored in $t7
sll $t4, $t2, 2            # calculate offset
add $t5, $t1, $t4        # $t5 stores address of color for current unit
lw $t5, 0($t5)            # $t5 stores color of current unit
add $t4, $t4, $t0        # $t4 stores address of current unit
sw $t5, 0($t4)            # paint unit black

jr $ra
            
draw_game:        li $t0, BASE_ADDRESS        # $t0 stores base address
    la $a0, tone
    lw $a1, duration2
    li $v0, 33
    syscall
            la $t1, background        # $t1 stores address of game_over
            li $t2, 0            # $t2 stores counter
            li $t3, NUM_UNITS        # $t3 stores total units

loop_game:        bge $t2, $t3, draw_lives
	    lw $a1, x
	    lw $a2, y
	    li $t8, 5      # load the value 5 into $t0
	    sw $t8, x      # store the value of $t0 into memory location x

	    li $t9, 49     # load the value 49 into $t1
	    sw $t9, y      # store the value of $t1 into memory location y
            sll $t4, $t2, 2            # calculate offset
            add $t5, $t1, $t4        # $t5 stores address of color for current unit
            lw $t5, 0($t5)            # $t5 stores color of current unit
            add $t4, $t4, $t0        # $t4 stores address of current unit
            sw $t5, 0($t4)            # paint unit black
            addi $t2, $t2, 1        # increment counter
            lw $t7, 0xffff0004           # get keypress from keyboard input
            beq $t7, 0x65, exit     # exit loop if 'e' was pressed
            j loop_game
            
draw_lost:        li $t0, BASE_ADDRESS        # $t0 stores base address
    syscall
            la $t1, lost        # $t1 stores address of game_over
            li $t2, 0            # $t2 stores counter
            li $t3, NUM_UNITS        # $t3 stores total units

loop_lost:        bge $t2, $t3, exit
            sll $t4, $t2, 2            # calculate offset
            add $t5, $t1, $t4        # $t5 stores address of color for current unit
            lw $t5, 0($t5)            # $t5 stores color of current unit
            add $t4, $t4, $t0        # $t4 stores address of current unit
            sw $t5, 0($t4)            # paint unit black
            addi $t2, $t2, 1        # increment counter
            lw $t7, 0xffff0004           # get keypress from keyboard input
            beq $t7, 0x65, exit     # exit loop if 'e' was pressed
            j loop_lost

draw_win:        li $t0, BASE_ADDRESS        # $t0 stores base addressS
    syscall
            la $t1, win        # $t1 stores address of game_over
            li $t2, 0            # $t2 stores counter
            li $t3, NUM_UNITS        # $t3 stores total units

loop_win:        bge $t2, $t3, exit
            sll $t4, $t2, 2            # calculate offset
            add $t5, $t1, $t4        # $t5 stores address of color for current unit
            lw $t5, 0($t5)            # $t5 stores color of current unit
            add $t4, $t4, $t0        # $t4 stores address of current unit
            sw $t5, 0($t4)            # paint unit black
            addi $t2, $t2, 1        # increment counter
            lw $t7, 0xffff0004           # get keypress from keyboard input
            beq $t7, 0x65, exit     # exit loop if 'e' was pressed
            j loop_win
            
            
draw_level2:        li $t0, BASE_ADDRESS        # $t0 stores base address
            la $t1, level2        # $t1 stores address of game_over
            li $t2, 0            # $t2 stores counter
            li $t3, NUM_UNITS        # $t3 stores total units

loop_game2w:        bge $t2, $t3, draw_lives
	    lw $a1, x
	    lw $a2, y
	    li $t8, 5      # load the value 5 into $t0
	    sw $t8, x      # store the value of $t0 into memory location x

	    li $t9, 49     # load the value 49 into $t1
	    sw $t9, y      # store the value of $t1 into memory location y
            sll $t4, $t2, 2            # calculate offset
            add $t5, $t1, $t4        # $t5 stores address of color for current unit
            lw $t5, 0($t5)            # $t5 stores color of current unit
            add $t4, $t4, $t0        # $t4 stores address of current unit
            sw $t5, 0($t4)            # paint unit black
            addi $t2, $t2, 1        # increment counter
            lw $t7, 0xffff0004           # get keypress from keyboard input
            beq $t7, 0x65, exit     # exit loop if 'e' was pressed
            j loop_game2w

draw_level3:        li $t0, BASE_ADDRESS        # $t0 stores base address
            la $t1, level3        # $t1 stores address of game_over
            li $t2, 0            # $t2 stores counter
            li $t3, NUM_UNITS        # $t3 stores total units

loop_game3:        bge $t2, $t3, draw_lives
	    lw $a1, x
	    lw $a2, y
	    li $t8, 5      # load the value 5 into $t0
	    sw $t8, x      # store the value of $t0 into memory location x

	    li $t9, 49     # load the value 49 into $t1
	    sw $t9, y      # store the value of $t1 into memory location y

            sll $t4, $t2, 2            # calculate offset
            add $t5, $t1, $t4        # $t5 stores address of color for current unit
            lw $t5, 0($t5)            # $t5 stores color of current unit
            add $t4, $t4, $t0        # $t4 stores address of current unit
            sw $t5, 0($t4)            # paint unit black
            addi $t2, $t2, 1        # increment counter
            lw $t7, 0xffff0004           # get keypress from keyboard input
            beq $t7, 0x65, exit     # exit loop if 'e' was pressed
            j loop_game3
            
exit_game_over:        

    li $v0, 4                   # syscall to print string
    la $a0, hello_world         # load address of the string
    syscall
    j exit
